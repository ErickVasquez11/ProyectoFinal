{"version":3,"sources":["Services/UserServices.js","Contexts/Context.js","Pages/Login/Login.jsx","Components/PrivateRoute/PrivateRoute.js","Pages/Home/Home.jsx","Components/CommentContainer.jsx","Components/CardUser.jsx","Components/PostContainerUser.jsx","Pages/UserMainPage/UserMainPage.jsx","Components/Card.jsx","Components/PostContainer.jsx","Components/Admin/Create.jsx","Components/cardToggle.jsx","Components/Admin/Toggle.jsx","Components/Admin/Update.jsx","Pages/AdminMainPage/AdminMainPage.jsx","Components/CardFavorites.jsx","Components/PostContainerFavorites.jsx","Pages/UserFavorites/UserFavoritePage.jsx","Pages/Error404/Error.jsx","Components/OwnedContainer.jsx","Pages/Owned/Owned.jsx","App.js","reportWebVitals.js","index.js"],"names":["BASE_URL","Services","loginAdmin","User","Pass","a","fetch","method","headers","body","JSON","stringify","username","password","Response","ok","json","Token","verifyToken","token","response","data","createPost","role","Title","Description","Imagen","Authorization","title","description","image","console","log","Owned","limit","page","Toggle","id","Update","Commet","text","GetAll","Like","AddFavorite","GetFavorite","GetOne","UserContext","React","createContext","TOKEN_KEY","Provider","props","useState","undefined","setToken","setUser","GetAllTokens","localStorage","setItem","useEffect","VerifyToken","TheToken","getToken","LOgin","useCallback","login","status","tokenQ","error","Exit","value","useMemo","user","useUserContext","contexts","useContext","Error","getItem","routes","Login","navigate","useNavigate","setError","setUsername","setPassword","onChange","e","save","target","onClickHandler","preventDefault","toast","logged","className","onSubmit","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","htmlFor","type","placeholder","Private","children","replace","to","Home","onClick","CommentCardContainer","CardUser","likes","length","setLikes","comments","commentState","setCommentState","commet","setcommet","getUsernamer","notifyfav","some","it","liked","setLiked","src","alt","Date","createdAt","toLocaleDateString","map","item","val","setTimeout","window","location","reload","PostContainerUser","pages","setPages","posts","setPosts","getPosts","nextPage","previusPage","_id","class","href","Card","getUsername","PostContainer","CreatePost","setTitle","descrip","setdescrip","img","setimg","reloadPage","then","res","err","CardToggle","ToggleP","setid","newPages","isOwnedPage","UpdatePostC","postName","setpostName","postFound","setPostFound","update_post","get","cscs","find","element","Admin","Create","setCreate","UpdateP","setUpdatePost","setToggle","go","CardFavorites","PostContainerFavorites","setarray","fav","array","forEach","push","OwnedContainer","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAMA,EAAW,4CAEXC,EAAW,GAMjBA,EAASC,WAAT,uCAAsB,WAAOC,EAAMC,GAAb,iBAAAC,EAAA,sEAEKC,MAAM,GAAD,OAAIN,EAAJ,gBAA4B,CACpDO,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBC,SAAS,GAAD,OAAKT,GACbU,SAAS,GAAD,OAAKT,OATH,YAEZU,EAFY,QAYLC,GAZK,gCAaMD,EAASE,OAbf,cAaRC,EAbQ,yBAcPA,GAdO,gCAgBX,IAhBW,2CAAtB,wDAoBAhB,EAASiB,YAAT,uCAAuB,WAAOC,GAAP,iBAAAd,EAAA,sEACIC,MAAM,GAAD,OAAIN,EAAJ,gBAA4B,CACpDO,OAAQ,MACRC,QAAS,CACL,cAAgB,UAAhB,OAA2BW,MAJhB,YACbC,EADa,QAONL,GAPM,gCAQIK,EAASJ,OARb,cAQTK,EARS,yBASRA,GATQ,gCAWZ,IAXY,2CAAvB,sDAeApB,EAASqB,WAAT,uCAAsB,WAAOL,EAAOM,EAAMC,EAAOC,EAAaC,GAAxC,iBAAArB,EAAA,kEAED,UAATkB,EAFU,iCAGajB,MAAM,GAAD,OAAIN,EAAJ,gBAA4B,CACpDO,OAAQ,OACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,GACzB,eAAgB,oBAEpBR,KAAMC,KAAKC,UAAU,CACjBiB,MAAM,GAAD,OAAKJ,GACVK,YAAY,GAAD,OAAKJ,GAChBK,MAAM,GAAD,OAAKJ,OAZR,cAGJZ,EAHI,gBAeSA,EAASE,OAflB,cAeJK,EAfI,OAgBVU,QAAQC,IAAIX,GAhBF,kBAiBHA,GAjBG,0DAoBdU,QAAQC,IAAR,MApBc,0DAAtB,8DAwBA/B,EAASgC,MAAT,uCAAiB,WAAOhB,EAAOM,EAAMW,EAAOC,GAA3B,iBAAA9B,EAAA,kEAEI,UAATkB,EAFK,iCAGkBjB,MAAM,GAAD,OAAIN,EAAJ,6BAAiCkC,EAAjC,iBAA+CC,GAAQ,CAC/E5B,OAAQ,MACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,MAN5B,cAGCH,EAHD,gBAScA,EAASE,OATvB,cASCK,EATD,OAULU,QAAQC,IAAIX,GAVP,kBAWEA,GAXF,0DAcTU,QAAQC,IAAR,MAdS,0DAAjB,4DAkBA/B,EAASmC,OAAT,uCAAkB,WAAOnB,EAAOM,EAAMc,GAApB,iBAAAhC,EAAA,kEAEG,UAATkB,EAFM,iCAGiBjB,MAAM,GAAD,OAAIN,EAAJ,wBAA4BqC,GAAM,CAC1D9B,OAAQ,QACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,MAN3B,cAGAH,EAHA,gBASaA,EAASE,OATtB,cASAK,EATA,OAUNU,QAAQC,IAAIX,GAVN,kBAWCA,GAXD,0DAcVU,QAAQC,MAdE,0DAAlB,0DAkBA/B,EAASqC,OAAT,uCAAkB,WAAOrB,EAAOM,EAAMc,GAApB,mCAAAhC,EAAA,yDAAwBmB,EAAxB,+BAAgC,GAAIC,EAApC,+BAAkD,GAAIC,EAAtD,+BAA+D,GAA/D,SAEG,UAATH,EAFM,iCAGiBjB,MAAM,GAAD,OAAIN,EAAJ,wBAA4BqC,GAAM,CAC1D9B,OAAQ,MACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,GACzB,eAAgB,oBAEpBR,KAAMC,KAAKC,UAAU,CACjBiB,MAAM,GAAD,OAAKJ,GACVK,YAAY,GAAD,OAAKJ,GAChBK,MAAM,GAAD,OAAKJ,OAZZ,cAGAZ,EAHA,iBAeaA,EAASE,OAftB,eAeAK,EAfA,OAgBNU,QAAQC,IAAIX,GAhBN,kBAiBCA,GAjBD,0DAqBVU,QAAQC,IAAR,MArBU,0DAAlB,0DA2BA/B,EAASsC,OAAT,uCAAkB,WAAOtB,EAAOoB,EAAIG,GAAlB,iBAAAnC,EAAA,kEAEG,KAATmC,EAFM,yCAGC,IAHD,uBAKiBlC,MAAM,GAAD,OAAIN,EAAJ,yBAA6BqC,GAAM,CAC3D9B,OAAQ,QACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,GACzB,eAAgB,oBAEpBR,KAAMC,KAAKC,UAAU,CACjBkB,YAAaW,MAZf,cAKA1B,EALA,iBAeaA,EAASE,OAftB,eAeAK,EAfA,OAgBNU,QAAQC,IAAIX,GAhBN,kBAiBCA,GAjBD,0DAoBVU,QAAQC,IAAR,MApBU,0DAAlB,0DAwBA/B,EAASwC,OAAT,uCAAkB,WAAOtB,EAAOe,EAAOC,GAArB,iBAAA9B,EAAA,+EAEaC,MAAM,GAAD,OAAIN,EAAJ,2BAA+BkC,EAA/B,iBAA6CC,GAAQ,CAC7E5B,OAAQ,MACRC,QAAS,CACLmB,cAAc,UAAD,OAAYR,MALvB,cAEJL,EAFI,gBAQSA,EAASE,OARlB,cAQJK,EARI,OASVU,QAAQC,IAAIX,GATF,kBAUHA,GAVG,kCAYVU,QAAQC,IAAR,MAZU,0DAAlB,0DAgBA/B,EAASyC,KAAT,uCAAgB,WAAOzB,EAAOoB,GAAd,iBAAAhC,EAAA,+EAEeC,MAAM,GAAD,OAAIN,EAAJ,sBAA0BqC,GAAM,CACxD9B,OAAQ,QACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,MALzB,cAEFH,EAFE,gBAQWA,EAASE,OARpB,cAQFK,EARE,yBASDA,GATC,kCAWRU,QAAQC,MAXA,0DAAhB,wDAkBA/B,EAAS0C,YAAT,uCAAuB,WAAO1B,EAAOoB,GAAd,iBAAAhC,EAAA,+EAEQC,MAAM,GAAD,OAAIN,EAAJ,qBAAyBqC,GAAM,CACvD9B,OAAQ,QACRC,QAAS,CACLmB,cAAc,UAAD,OAAYV,MALlB,cAETH,EAFS,gBAQIA,EAASE,OARb,cAQTK,EARS,OASfU,QAAQC,IAAIX,GATG,kBAURA,GAVQ,kCAYfU,QAAQC,MAZO,0DAAvB,wDAgBA/B,EAAS2C,YAAT,uCAAuB,WAAOzB,GAAP,iBAAAd,EAAA,+EAEQC,MAAM,GAAD,OAAIN,EAAJ,aAAyB,CACjDO,OAAQ,MACRC,QAAS,CACLmB,cAAc,UAAD,OAAYR,MALlB,cAETL,EAFS,gBAQIA,EAASE,OARb,cAQTK,EARS,OASfU,QAAQC,IAAIX,GATG,kBAURA,GAVQ,kCAYfU,QAAQC,IAAR,MAZe,0DAAvB,sDAgBA/B,EAAS4C,OAAT,uCAAkB,WAAO1B,EAAOkB,GAAd,iBAAAhC,EAAA,+EAEaC,MAAM,GAAD,OAAIN,EAAJ,qBAAyBqC,GAAM,CACvD9B,OAAQ,MACRC,QAAS,CACLmB,cAAc,UAAD,OAAYR,MALvB,cAEJL,EAFI,gBAQSA,EAASE,OARlB,cAQJK,EARI,OASVU,QAAQC,IAAIX,GATF,kBAUHA,GAVG,kCAYVU,QAAQC,IAAR,MAZU,0DAAlB,wDAgBe/B,Q,OCxOT6C,EAAcC,IAAMC,gBACpBC,EAAY,QAELC,EAAW,SAACC,GACrB,MAA0BC,wBAASC,GAAnC,mBAAOpC,EAAP,KAAcqC,EAAd,KACA,EAAwBF,wBAASC,GAAjC,mBAAOlD,EAAP,KAAaoD,EAAb,KAGMC,EAAe,SAACvC,GAClBwC,aAAaC,QAAQT,EAAWhC,GAChCqC,EAASrC,IAGb0C,qBAAU,WACN,IAAMC,EAAW,uCAAG,kCAAAvD,EAAA,2DACVwD,EAAWC,KADD,gCAKF7D,EAASiB,YAAY2C,GALnB,gBAIJjD,EAJI,EAIJA,SAAUW,EAJN,EAIMA,KAEdX,GAAYW,IACZgC,EAAQ,CAAE3C,WAAUW,SACpBiC,EAAaK,IARL,2CAAH,qDAajBD,MACD,CAAC3C,IAEJ,IAAM8C,EAAQC,uBAAY,SAACpD,EAAUC,GACjC,IAAMoD,EAAK,uCAAG,gCAAA5D,EAAA,6DACN6D,GAAS,EADH,kBAG0BjE,EAASC,WAAWU,EAAUC,GAHxD,iBAGSsD,EAHT,EAGEhD,SAEJqC,EAAaW,GACbD,GAAS,GANP,gDASNnC,QAAQqC,MAAR,MACArC,QAAQqC,MAAM,wBAVR,2CAYCF,GAZD,+DAAH,qDAgBX,OAAOD,MACR,IAEGI,EAAOL,uBAAY,WACrBT,OAAQF,GACRG,OAAaH,KACd,IAEGiB,EAAQC,mBAAQ,iBAAO,CACzBpD,MAAOF,EACPuD,KAAMrE,EACN8D,MAAOF,EACPM,KAAMA,KACN,CAACpD,EAAOd,EAAM4D,EAAOM,IAEzB,OAAO,cAACvB,EAAYI,SAAb,aAAsBoB,MAAOA,GAAWnB,KAGtCsB,EAAiB,WAC1B,IAAMC,EAAW3B,IAAM4B,WAAW7B,GAClC,IAAK4B,EACD,MAAM,IAAIE,MAAM,mDAEpB,OAAOF,GAGLZ,EAAW,kBAAML,aAAaoB,QAAQ5B,I,uBClEtC6B,G,MAAS,CACX,MAAS,SACT,KAAQ,UAIG,SAASC,IAIpB,IAAML,EAAWD,IACXO,EAAWC,cACjB,EAAyBR,IAAjBR,EAAR,EAAQA,MACR,GADA,EAAe9C,MACWiC,oBAAS,IAAnC,mBAAc8B,GAAd,WACA,EAAgC9B,mBAAS,IAAzC,mBAAOxC,EAAP,KAAiBuE,EAAjB,KACA,EAAgC/B,mBAAS,IAAzC,mBAAOvC,EAAP,KAAiBuE,EAAjB,KAKMC,EAAW,SAACC,EAAGC,GACjBA,EAAKD,EAAEE,OAAOlB,QAGZmB,EAAc,uCAAG,WAAOH,GAAP,eAAAjF,EAAA,yDACnBiF,EAAEI,iBACc,KAAb9E,GAAgC,KAAbC,EAFH,gBANG8E,IAAMvB,MAAM,kCAMf,uCAKMH,EAAMrD,EAAUC,GALtB,OAKT+E,EALS,OAOfV,GAAUU,GACVT,EAAY,IACZC,EAAY,IAEPQ,GAlBQD,IAAMvB,MAAM,uCAOV,4CAAH,sDAwBpB,OAPAT,qBAAU,WACc,IAAD,EAAfe,EAASF,MACTQ,EAAQ,UAACF,EAAOJ,EAASF,KAAKjD,aAAtB,QAA+B,OAE5C,CAACmD,EAASF,OAIT,cADG,CACH,WAASqB,UAAU,cAAnB,cACA,uBAAMC,SAAUL,EAAgBI,UAAU,sGAA1C,UAEQ,cAAC,IAAD,CACAE,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEZ,sBAAKV,UAAU,4DAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,wBAAOW,QAAQ,WACfX,UAAU,8DADV,qBAEY,cAAC,IAAD,OAEZ,uBAAOY,KAAK,OACZnC,MAAO1D,EACP8F,YAAY,qBACZrB,SAAU,SAACC,GAAD,OAAOD,EAASC,EAAGH,IAC7BU,UAAU,4BAEd,sBAAKA,UAAU,0BAAf,UACI,wBAAOW,QAAQ,WACfX,UAAU,gEADV,2BAEe,cAAC,IAAD,OAEf,uBAAOY,KAAK,WAAWnC,MAAOzD,EAC9B6F,YAAY,gBACZrB,SAAU,SAACC,GAAD,OAAOD,EAASC,EAAGF,IAC7BS,UAAU,4BAEd,wBACAA,UAAU,iFADV,+BC7FpB,IAQec,EARC,SAAC,GAAiC,IAAD,IAA9BpF,YAA8B,MAAvB,OAAuB,EAAfqF,EAAe,EAAfA,SAC9B,EAAwBnC,IAAhBtD,EAAR,EAAQA,MAAOqD,EAAf,EAAeA,KAEf,OAAKrD,EACAqD,GAAQA,EAAKjD,OAASA,EACpBqF,EADiC,cAAC,IAAD,CAAUC,SAAO,EAACC,GAAG,SAD1C,cAAC,IAAD,CAAUD,SAAO,EAACC,GAAG,YCH7B,SAASC,IACpB,IAAM/B,EAAWC,cAMjB,OACI,yBAASY,UAAU,cAAnB,SACA,qBAAKA,UAAU,+FAAf,SAEI,wBAAQmB,QARK,WACjBhC,EAAS,WAO2Ba,UAAU,0FAA1C,qC,4BCHGoB,EATc,SAAC9D,GAC1B,OACI,sBAAK0C,UAAU,OAAf,UACI,qBAAIA,UAAU,kCAAd,UAAiD1C,EAAMvC,SAAvD,OACA,4BAAIuC,EAAMtB,kBCaP,SAASqF,EAAS/D,GAE7B,MAAyBsB,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OACf,EAAgCiC,mBAAS,IAAzC,mBAAOxC,EAAP,KAAiBuE,EAAjB,KACA,EAA0B/B,mBAASD,EAAMgE,MAAMC,QAA/C,mBAAOD,EAAP,KAAcE,EAAd,KACA,EAAwCjE,mBAASD,EAAMmE,UAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BpE,mBAAS,IAArC,mBAAOqE,EAAP,KAAeC,EAAf,KAGMC,EAAY,uCAAG,8BAAAtH,EAAA,sEACEJ,EAASiB,YAAYC,GADvB,OACfC,EADe,OAEfR,EAAWQ,EAASR,SAC1BuE,EAAYvE,GACZmB,QAAQC,IAAIpB,GACZ4G,EAAgBrE,EAAMmE,UALD,2CAAH,qDAUhBM,EAAY,kBAAMjC,YAAM,+BAE1B,EAA0BvC,mBAASD,EAAMgE,MAAMU,MAAK,SAACC,GAAD,OAAQA,EAAGlH,WAAaA,MAA5E,mBAAOmH,EAAP,KAAcC,EAAd,KAEArE,qBAAU,WACNgE,MACD,IAzBiC,4CA+CpC,sBAAAtH,EAAA,sEACUJ,EAASyC,KAAKvB,EAAOgC,EAAMd,IADrC,OAGS0F,GAIDV,EAASF,EAAQ,GACjBa,GAAS,KAJTX,EAASF,EAAQ,GACjBa,GAAS,IALjB,4CA/CoC,kEA4DpC,sBAAA3H,EAAA,sEAC4BJ,EAAS0C,YAAYxB,EAAOgC,EAAMd,IAD9D,cAEIuF,IAFJ,4CA5DoC,sBAiEpC,OACI,mCACQ,sBAAK/B,UAAU,wBAAf,UACI,cAAC,IAAD,CACAE,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEZ,sBAAKV,UAAU,+EAAf,UACI,qBAAKA,UAAU,oDACXoC,IAAK9E,EAAMrB,MAAOoG,IAAI,aAC1B,sBAAKrC,UAAU,sCAAf,UACI,oBAAIA,UAAU,yCAAd,SAAwD,IAAIsC,KAAKhF,EAAMiF,WAAWC,uBAClF,oBAAIxC,UAAU,8BAAd,SAA6C1C,EAAMvB,QACnD,mBAAGiE,UAAU,uBAAb,SAAqC1C,EAAMtB,cAC3C,sBAAKgE,UAAU,+BAAf,UACI,mBAAGA,UAAU,2DAAb,SAAyE1C,EAAMvC,WAC/E,uBACIiF,UAAU,6IADd,UAEI,cAAC,IAAD,CAAoBA,UAAU,mBAAmB1C,EAAMmE,SAASF,OAChE,cAAC,IAAD,CAAcvB,UAAS,yBAAoBkC,GAAS,mBAAqBf,QA3FrE,6CA2F0F7D,EAAMgE,MAAMC,UAE9G,wBAAQvB,UAAU,+EAAlB,SACI,cAAC,IAAD,CAASA,UAAU,iBAAiBmB,QA9FhC,kDAiGZ,gCACA,oBAAInB,UAAW,uDAAf,yBAEI1C,EAAMmE,UAAYC,EAAae,KAAI,SAACC,GAChC,OAAO,cAAC,EAAD,CAAoC3H,SAAU2H,EAAK/D,KAAK5D,SAAUiB,YAAa0G,EAAK1G,aAAzD0G,EAAKlG,aAKnD,qBAAKwD,UAAU,MAAf,SACQ,uBAAMA,UAAU,mBAAhB,UACpB,uBACIA,UAAU,2EACVY,KAAK,OACLC,YAAY,8BAA8BrB,SApFtC,SAACmD,GACbd,EAAUc,EAAIhD,OAAOlB,UAqFjB,wBAAQuB,UAAU,oFACdmB,QAjFK,SAAC1B,GACdA,EAAEI,iBACa,KAAX+B,EAjBmB9B,IAAMvB,MAAM,uCAoB1BqD,EAAOL,OAAS,EArBFzB,IAAMvB,MAAM,iDAyBnCnE,EAASsC,OAAOpB,EAAMgC,EAAMd,GAAGoF,GA/CnCgB,YAAW,WACPC,OAAOC,SAASC,WACf,OAoHG,6CC9HZ,IA4CeC,EA5CW,WACtB,MAA0BzF,mBAAS,GAAnC,mBAAO0F,EAAP,KAAcC,EAAd,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAyBxE,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OAEfwC,qBAAU,WACNuF,MACD,IAEH,IAAMC,EAAQ,uCAAG,sBAAA9I,EAAA,6DAEb0I,EADiBD,EAAQ,GADZ,SAGPI,IAHO,2CAAH,qDAMRE,EAAW,uCAAG,sBAAA/I,EAAA,6DAEhB0I,EADiBD,EAAQ,GADT,SAGVI,IAHU,2CAAH,qDAMXA,EAAQ,uCAAG,8BAAA7I,EAAA,sEACQJ,EAASwC,OAAOtB,EAAO,EAAG2H,GADlC,OACT1H,EADS,OAETC,EAAQD,EAASC,KACrB4H,EAAS5H,GAHI,2CAAH,qDAMd,OACI,cADI,CACJ,sBACI,qBAAKwE,UAAU,iBAAf,SACHmD,EAAMV,KAAI,SAACjH,GACR,OAAO,cAAC6F,EAAD,CAAUkB,UAAW/G,EAAK+G,UAA0B/F,GAAIhB,EAAKgI,IAAKzH,MAAOP,EAAKO,MACrFhB,SAAUS,EAAKmD,KAAK5D,SAAUiB,YAAaR,EAAKQ,YAAaC,MAAOT,EAAKS,MAAOqF,MAAO9F,EAAK8F,MAC5FG,SAAUjG,EAAKiG,UAFkCjG,EAAKgI,UAK1D,sBAAKxD,UAAU,qCAAf,UACI,wBAAQA,UAAU,0BAA0BmB,QAASoC,EAArD,sBACA,wBAAQvD,UAAU,yBAAyBmB,QAASmC,EAApD,8BCvCK,SAAShJ,IACtB,IAAM6E,EAAWC,cACTZ,EAASI,IAATJ,KACR,EAAyBI,IAAzB,EAAQR,MAAR,EAAe9C,MAkBjB,OACE,yCACE,yBAAS0E,UAAU,wDAAnB,SACE,sBAAKA,UAAU,oGAAf,UACE,mBAAGA,UAAU,0FAAb,uBACE,sBAAKA,UAAU,6IAAf,UACE,oBAAGA,UAAU,mHAAb,UACI,sBAAMA,UAAU,QAAQmB,QApBxB,WAChBhC,EAAS,UAmBO,kBACE,sBAAMa,UAAU,2EAAhB,SACQ,sBAAM,SAAO,QAAQA,UAAU,oEAGvC,oBAAGA,UAAU,oGAAoG,SAAO,mBAAxH,UACI,sBAAMA,UAAU,QAAQmB,QAtB1B,WAClBhC,EAAS,kBAqBW,uBACA,sBAAMa,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,uEAM3C,qBAAKyD,MAAM,0EAAX,SACI,sBAAMA,MAAM,mCAAZ,SACI,mBAAGC,KAAK,IAAID,MAAM,oQAClBtC,QA7BF,WAClB3C,IACAW,EAAS,WA0BW,6BASpB,cAAC,EAAD,O,oBC5CW,SAASwE,EAAKrG,GAEzB,MAAyBsB,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OAQf,EAAgCiC,mBAAS,IAAzC,mBAAOxC,EAAP,KAAiBuE,EAAjB,KACA,EAA0B/B,mBAASD,EAAMgE,MAAMC,QAA/C,mBAAOD,EAAP,KAAcE,EAAd,KACA,EAAwCjE,mBAASD,EAAMmE,UAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BpE,mBAAS,IAArC,mBAAOqE,EAAP,KAAeC,EAAf,KAIME,EAAY,kBAAMjC,YAAM,iCAExB8D,EAAW,uCAAG,8BAAApJ,EAAA,sEACGJ,EAASiB,YAAYC,GADxB,OACdC,EADc,OAEdR,EAAWQ,EAASR,SAC1BuE,EAAYvE,GACZ4G,EAAgBrE,EAAMmE,UAJF,2CAAH,qDASjB,EAA0BlE,mBAASD,EAAMgE,MAAMU,MAAK,SAACU,GAAD,OAAUA,EAAK3H,WAAaA,MAAhF,mBAAOmH,EAAP,KAAcC,EAAd,KAGArE,qBAAU,WACN8F,MACD,IAjC6B,4CAqDhC,sBAAApJ,EAAA,sEACUJ,EAASyC,KAAKvB,EAAOgC,EAAMd,IADrC,OAES0F,GAIDV,EAASF,EAAQ,GACjBa,GAAS,KAJTX,EAASF,EAAQ,GACjBa,GAAS,IAJjB,4CArDgC,kEAgEhC,sBAAA3H,EAAA,sEAC4BJ,EAAS0C,YAAYxB,EAAOgC,EAAMd,IAD9D,cAEIuF,IAFJ,4CAhEgC,sBAsEhC,OACI,mCACQ,sBAAK/B,UAAU,wBAAf,UACI,cAAC,IAAD,CACIE,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEhB,sBAAKV,UAAU,+EAAf,UACI,qBAAKA,UAAU,oDACXoC,IAAK9E,EAAMrB,MAAOoG,IAAI,aAC1B,sBAAKrC,UAAU,sCAAf,UACI,oBAAIA,UAAU,yCAAd,SAAwD,IAAIsC,KAAKhF,EAAMiF,WAAWC,uBAClF,oBAAIxC,UAAU,8BAAd,SAA6C1C,EAAMvB,QACnD,mBAAGiE,UAAU,uBAAb,SAAqC1C,EAAMtB,cAC3C,sBAAKgE,UAAU,+BAAf,UACI,mBAAGA,UAAU,2DAAb,SAAyE1C,EAAMvC,WAC/E,uBAAMiF,UAAU,8HAAhB,UACI,cAAC,IAAD,CAAcA,UAAS,yBAAoBkC,GAAS,mBAAqBf,QA9FzE,6CA8F8F7D,EAAMgE,MAAMC,UAE9G,sBAAMvB,UAAU,8DAAhB,SACI,cAAC,IAAD,CAASA,UAAU,iBAAiBmB,QAjGpC,+CAmGJ,sBAAMnB,UAAU,8DAAhB,SACI,cAAC,IAAD,MAEJ,sBAAMA,UAAU,6EAAhB,SACI,cAAC,IAAD,SAGR,gCACA,oBAAIA,UAAW,uDAAf,yBAEI1C,EAAMmE,UAAYC,EAAae,KAAI,SAACC,GAChC,OAAO,cAAC,EAAD,CAAoC3H,SAAU2H,EAAK/D,KAAK5D,SAC/DiB,YAAa0G,EAAK1G,aADgB0G,EAAKlG,UAK/C,qBAAKwD,UAAU,MAAf,SACI,uBAAMA,UAAU,SAAhB,UACI,uBACIA,UAAU,2EACVY,KAAK,OACLC,YAAY,8BAA8BrB,SArF9D,SAACmD,GACbd,EAAUc,EAAIhD,OAAOlB,UAsFO,wBAAQuB,UAAU,yFAClBmB,QApFf,SAAC1B,GACdA,EAAEI,iBACa,KAAX+B,EAzBuB9B,IAAMvB,MAAM,uCA4B9BqD,EAAOL,OAAS,EA7BEzB,IAAMvB,MAAM,iDAiCvCnE,EAASsC,OAAOpB,EAAMgC,EAAMd,GAAGoF,GA3C/BgB,YAAW,WACPC,OAAOC,SAASC,WACf,OAmHuB,kDClIpC,IA8Cec,EA9CO,WAClB,MAA0BtG,mBAAS,GAAnC,mBAAO0F,EAAP,KAAcC,EAAd,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAyBxE,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OAEfwC,qBAAU,WACNuF,MACD,IAEH,IAAMC,EAAQ,uCAAG,sBAAA9I,EAAA,6DAEb0I,EADiBD,EAAQ,GADZ,SAGPI,IAHO,2CAAH,qDAMRE,EAAW,uCAAG,sBAAA/I,EAAA,6DAEhB0I,EADiBD,EAAQ,GADT,SAGVI,IAHU,2CAAH,qDAMXA,EAAQ,uCAAG,8BAAA7I,EAAA,sEACQJ,EAASwC,OAAOtB,EAAO,EAAG2H,GADlC,OACT1H,EADS,OAETC,EAAQD,EAASC,KACrB4H,EAAS5H,GAHI,2CAAH,qDAQd,OACI,cADI,CACJ,sBACI,qBAAKwE,UAAU,iBAAf,SACHmD,EAAMV,KAAI,SAACjH,GACR,OAAO,cAACmI,EAAD,CAAMpB,UAAW/G,EAAK+G,UAA0B/F,GAAIhB,EAAKgI,IAAKzH,MAAOP,EAAKO,MACjFhB,SAAUS,EAAKmD,KAAK5D,SAAUiB,YAAaR,EAAKQ,YAChDC,MAAOT,EAAKS,MAAOqF,MAAO9F,EAAK8F,MAAOG,SAAUjG,EAAKiG,UAFRjG,EAAKgI,UAKtD,sBAAKxD,UAAU,qCAAf,UACI,wBAAQA,UAAU,0BAA0BmB,QAASoC,EAArD,sBACA,wBAAQvD,UAAU,yBAAyBmB,QAASmC,EAApD,8BCvCG,SAASQ,IACpB,MAAyBlF,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OACf,EAA0BiC,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcgI,EAAd,KACA,EAA8BxG,mBAAS,IAAvC,mBAAOyG,EAAP,KAAgBC,EAAhB,KACA,EAAsB1G,mBAAS,IAA/B,mBAAO2G,EAAP,KAAYC,EAAZ,KAoCMC,EAAa,WACfxB,YAAW,WACPC,OAAOC,SAASC,WACf,MAST,OACI,sBAAK/C,UAAU,gDAAgDxD,GAAG,OAAlE,UACI,cAAC,IAAD,CACI0D,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEZ,sBAAKV,UAAU,gDAAf,UACA,oBAAIA,UAAU,+BAAd,qBAGA,uBAAOxD,GAAG,SAASoE,KAAK,OAAOC,YAAY,oBAAoBrB,SA3D3D,SAACmD,GACboB,EAASpB,EAAIhD,OAAOlB,QA0DsEuB,UAAU,mBAC5F,oBAAIA,UAAU,+BAAd,6BAGA,uBAAOxD,GAAG,cAAcoE,KAAK,OAAOC,YAAY,0BAA0BrB,SA3DrE,SAACmD,GACdsB,EAAWtB,EAAIhD,OAAOlB,QA0DgFuB,UAAU,mBACxG,oBAAIA,UAAU,+BAAd,qBAGA,uBAAOxD,GAAG,SAASoE,KAAK,OAAOC,YAAY,uBAAuBrB,SA3D7D,SAACmD,GACdwB,EAAOxB,EAAIhD,OAAOlB,QA0D4EuB,UAAU,mBAChG,sBAAKA,UAAU,YAAf,UACI,wBAAQmB,QA1DF,WACJ,KAAVpF,GAA2B,KAAXiI,GAAuB,KAANE,EAdVpE,IAAMvB,MAAM,+DAgB7BxC,EAAMwF,OAAS,GAAKxF,EAAMwF,OAAS,IAAMyC,EAAQzC,OAAS,EAjBzCzB,IAAMvB,MAAM,iDADhBuB,YAAM,4BAsBzB1F,EAASqB,WAAWH,EAAO,QAASS,EAAMiI,EAAQE,GACjDG,MAAK,SAAAC,GACFpI,QAAQC,IAAImI,MACb,SAAAC,GACCrI,QAAQC,IAAIoI,MAGhBH,MA4CwCpE,UAAU,mFAA1C,wBACA,wBAAQmB,QAlCH,WACjByB,YAAW,WACPC,OAAOC,SAASC,WACf,MA+BsC/C,UAAU,iFAAzC,+BCjFL,SAASwE,EAAWlH,GAE/B,MAAyBsB,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OAEf,EAAgCiC,mBAAS,IAAzC,mBAAiB+B,GAAjB,WAEMsE,EAAW,uCAAG,8BAAApJ,EAAA,sEACGJ,EAASiB,YAAYC,GADxB,OACdC,EADc,OAEdR,EAAWQ,EAASR,SAC1BuE,EAAYvE,GAHQ,2CAAH,qDASjB,OAJA+C,qBAAU,WACN8F,MACD,IAGC,mCACQ,qBAAK5D,UAAU,wBAAf,SACI,qBAAKA,UAAU,+EAAf,SACI,sBAAKA,UAAU,sCAAf,UACI,oBAAIA,UAAU,8BAAd,SAA6C1C,EAAMvB,QACnD,4BAAIuB,EAAMd,KACV,mBAAGwD,UAAU,uBAAb,SAAqC1C,EAAMtB,uBCrBxD,SAASyI,IACpB,MAA0BlH,mBAAS,GAAnC,mBAAO0F,EAAP,KAAcC,EAAd,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAyBxE,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OACf,EAAoBiC,qBAApB,mBAAOf,EAAP,KAAWkI,EAAX,KAEA5G,qBAAU,WACNuF,MACD,IAEH,IAAMC,EAAQ,uCAAG,4BAAA9I,EAAA,6DACPmK,EAAW1B,EAAQ,EADZ,SAEPC,EAASyB,GAFF,uBAGPtB,IAHO,2CAAH,qDAMRE,EAAW,uCAAG,4BAAA/I,EAAA,6DACVmK,EAAW1B,EAAQ,EADT,SAEVC,EAASyB,GAFC,uBAGVtB,IAHU,2CAAH,qDAsBXA,EAAQ,uCAAG,8BAAA7I,EAAA,sEACQJ,EAASgC,MAAMd,EAAO,QAAS,EAAG2H,GAD1C,OACT1H,EADS,OAETC,EAAOD,EAASC,KACpB4H,EAAS5H,GAHI,2CAAH,qDAgBd,OAEI,qCACI,qBAAKwE,UAAU,iBAAf,SACKmD,EAAMV,KAAI,SAACjH,GACR,OAAO,cAACgJ,EAAD,CAAYjC,UAAW/G,EAAK+G,UAAW/F,GAAIhB,EAAKgI,IAAKzH,MAAOP,EAAKO,MAAO6I,aAAa,SAGpG,sBAAK5E,UAAU,qCAAf,UACI,wBAAQA,UAAU,0BAA0BmB,QAASoC,EAArD,sBACA,wBAAQvD,UAAU,yBAAyBmB,QAASmC,EAApD,0BAEJ,sBAAKtD,UAAU,+DAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,oBAAIA,UAAU,GAAd,wBACA,uBAAOA,UAAU,sCAAsCY,KAAK,OAAOC,YAAY,KAAKrB,SAzBnF,SAACmD,GACd+B,EAAM/B,EAAIhD,OAAOlB,aA0BT,sBAAKuB,UAAU,6BAAf,UACI,wBAAQA,UAAU,0DAA0DmB,QAxBnE,WACrB/G,EAASmC,OAAOjB,EAAM,QAAQkB,GAfPsD,YAAM,8BAL7B8C,YAAW,WACPC,OAAOC,SAASC,WACf,MAyCO,gCACA,wBAAQ/C,UAAU,wDAAwDmB,QAnDrE,WACjByB,YAAW,WACPC,OAAOC,SAASC,WACf,MAgDO,+BC1EL,SAAS8B,IACpB,MAAgCtH,mBAAS,IAAzC,mBAAOuH,EAAP,KAAiBC,EAAjB,KACA,EAA0BxH,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAkC7F,mBAAS,IAA3C,mBAAOyH,EAAP,KAAkBC,EAAlB,KACA,EAAyBrG,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OACf,EAA0BiC,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcgI,EAAd,KACA,EAA8BxG,mBAAS,IAAvC,mBAAOyG,EAAP,KAAgBC,EAAhB,KACA,EAAsB1G,mBAAS,IAA/B,mBAAO2G,EAAP,KAAYC,EAAZ,KAUArG,qBAAU,WACNuF,MACD,IAEH,IAkCM6B,EAAW,uCAAG,sBAAA1K,EAAA,sDACF,KAAVuB,GAA2B,KAAXiI,GAAuB,KAANE,EA7CVpE,IAAMvB,MAAM,+DAgD9BxC,EAAMwF,OAAS,GAAKxF,EAAMwF,OAAS,IAAMyC,EAAQzC,OAAS,EAjDxCzB,IAAMvB,MAAM,iDADhBuB,YAAM,iCAsDzB1F,EAASqC,OAAOnB,EAAM,QAAQ0J,EAAUxB,IAAIzH,EAAMiI,EAAQE,GACzDG,MAAK,SAAAC,GACFpI,QAAQC,IAAImI,MAEd,SAAAC,GACErI,QAAQC,IAAIoI,MAnBpB3B,YAAW,WACPC,OAAOC,SAASC,WACf,MAIW,2CAAH,qDAuBXM,EAAQ,uCAAG,8BAAA7I,EAAA,sEACQJ,EAASgC,MAAMd,EAAO,QAAS,IAAK,GAD5C,OACTC,EADS,OAETC,EAAOD,EAASC,KACpB4H,EAAS5H,GAHI,2CAAH,qDAYd,OACI,sBAAKwE,UAAU,iBAAf,UACI,cAAC,IAAD,CACIE,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjBC,aAAa,EACbC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,IAEhB,sBAAKV,UAAU,2EAAf,UACI,oBAAIA,UAAU,qBAAd,oCACA,uBAAOY,KAAK,OAAOC,YAAY,wBAAwBrB,SA9BlD,SAAC2F,GACdJ,EAAYI,EAAIxF,OAAOlB,QA6B4DuB,UAAU,8BACrF,wBAAQmB,QAzEL,WACX,IAAMiE,EAAOjC,EAAMkC,MAAK,SAAAC,GAAO,OAAIA,EAAQvJ,OAAS+I,KAEpD,GADA5I,QAAQC,IAAIiJ,GACRjC,EAAMkC,MAAK,SAAAC,GAAO,OAAIA,EAAQvJ,OAAS+I,KAAU,CACjD5I,QAAQC,IAAI,SAxBM2D,YAAM,mBA0BxB,IAAMsF,EAAOjC,EAAMkC,MAAK,SAAAC,GAAO,OAAIA,EAAQvJ,OAAS+I,KACpDG,EAAaG,QAGblJ,QAAQC,IAAI,YA7BM2D,IAAMvB,MAAM,8CA6F1ByB,UAAU,0FADV,uBAIJ,sBAAKA,UAAU,8FAAf,UACI,oBAAIA,UAAU,+BAAd,qBAGA,uBAAOxD,GAAG,SAASoE,KAAK,OAAOC,YAAY,oBAAoBrB,SA7F3D,SAACmD,GACboB,EAASpB,EAAIhD,OAAOlB,QA4FsEuB,UAAU,mBAC5F,oBAAIA,UAAU,+BAAd,6BAGA,uBAAOxD,GAAG,cAAcoE,KAAK,OAAOC,YAAY,0BAA0BrB,SA7FrE,SAACmD,GACdsB,EAAWtB,EAAIhD,OAAOlB,QA4FgFuB,UAAU,mBACxG,oBAAIA,UAAU,+BAAd,qBAGA,uBAAOxD,GAAG,SAASoE,KAAK,OAAOC,YAAY,uBAAuBrB,SA7F7D,SAACmD,GACdwB,EAAOxB,EAAIhD,OAAOlB,QA4F4EuB,UAAU,mBAChG,gCACI,wBAAQmB,QAAS+D,EAAalF,UAAU,uFAAxC,wBACA,wBAAQmB,QA1CH,WACjByB,YAAW,WACPC,OAAOC,SAASC,WACf,MAuCsC/C,UAAU,qFAAzC,6BC1HL,SAASuF,IACpB,IAAMpG,EAAWC,cACTZ,EAASI,IAATJ,KACR,EAA4BjB,oBAAS,GAArC,mBAAOiI,EAAP,KAAeC,EAAf,KACA,EAAiClI,oBAAS,GAA1C,mBAAOmI,EAAP,KAAgBC,EAAhB,KACA,EAA4BpI,oBAAS,GAArC,mBAAOhB,EAAP,KAAeqJ,EAAf,KAIMC,GAAK,EA0BX,OACI,cADI,CACJ,iBACK,yBAAS7F,UAAU,wDAAnB,SACG,sBAAKA,UAAU,oGAAf,UACI,mBAAGA,UAAU,0FAAb,uBACA,sBAAKA,UAAU,8HAAf,UACI,oBAAGA,UAAU,oGAAb,UACI,sBAAMA,UAAU,QAAQmB,QAhB9B,WACdhC,EAAS,WAeW,kBACA,sBAAMa,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,oEAGvC,oBAAGmB,QAhBN,WACbhC,EAAS,cAe6Ba,UAAU,oGAAoG,SAAO,mBAA3I,UACI,sBAAMA,UAAU,QAAhB,mBACA,sBAAMA,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,oEAGvC,oBAAGmB,QA3CR,WACXwE,EAAcE,IA0CsB7F,UAAU,oGAAoG,SAAO,mBAAzI,UACI,sBAAMA,UAAU,QAAhB,oBACA,sBAAMA,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,oEAGvC,oBAAGmB,QA3CJ,WACfsE,EAAUI,IA0C8B7F,UAAU,oGAAoG,SAAO,mBAA7I,UACI,sBAAMA,UAAU,QAAhB,yBACA,sBAAMA,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,oEAIvC,oBAAGmB,QArDJ,WACfyE,EAAUC,IAoD8B7F,UAAU,oGAAoG,SAAO,mBAA7I,UACI,sBAAMA,UAAU,QAAhB,oBACA,sBAAMA,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,uEAK3C,qBAAKyD,MAAM,0EAAX,SACI,sBAAMA,MAAM,mCAAZ,SACI,mBAAGC,KAAK,IAAID,MAAM,oQACdtC,QAxDN,WAClB3C,IACAW,EAAS,WAqDW,6BAS5B,8BAAMqG,GAAU,cAAC1B,EAAD,MACd4B,GAAW,cAACb,EAAD,IACXtI,GAAU,cAACkI,EAAD,IACZ,cAAC,EAAD,OCtFe,SAASqB,EAAcxI,GAElC,MAAyBsB,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OACf,EAAgCiC,mBAAS,IAAzC,mBAAOxC,EAAP,KAAiBuE,EAAjB,KACA,EAA0B/B,mBAASD,EAAMgE,MAAMC,QAA/C,mBAAOD,EAAP,KAAcE,EAAd,KACA,EAAwCjE,mBAASD,EAAMmE,UAAvD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA4BpE,mBAAS,IAArC,mBAAOqE,EAAP,KAAeC,EAAf,KAGMC,EAAY,uCAAG,8BAAAtH,EAAA,sEACEJ,EAASiB,YAAYC,GADvB,OACfC,EADe,OAEfR,EAAWQ,EAASR,SAC1BuE,EAAYvE,GACZmB,QAAQC,IAAIpB,GACZ4G,EAAgBrE,EAAMmE,UALD,2CAAH,qDAQlB,EAA0BlE,mBAASD,EAAMgE,MAAMU,MAAK,SAACC,GAAD,OAAQA,EAAGlH,WAAaA,MAA5E,mBAAOmH,EAAP,KAAcC,EAAd,KAEArE,qBAAU,WACNgE,MACD,IArBsC,4CAkCzC,sBAAAtH,EAAA,sEACUJ,EAASyC,KAAKvB,EAAOgC,EAAMd,IADrC,OAGS0F,GAIDV,EAASF,EAAQ,GACjBa,GAAS,KAJTX,EAASF,EAAQ,GACjBa,GAAS,IALjB,4CAlCyC,kEA+CzC,sBAAA3H,EAAA,sEAC4BJ,EAAS0C,YAAYxB,EAAOgC,EAAMd,IAD9D,0DA/CyC,sBAmDzC,OACI,mCACQ,qBAAKwD,UAAU,wBAAf,SACI,sBAAKA,UAAU,+EAAf,UACI,qBAAKA,UAAU,oDACXoC,IAAK9E,EAAMrB,MAAOoG,IAAI,aAC1B,sBAAKrC,UAAU,sCAAf,UACI,oBAAIA,UAAU,yCAAd,SAAwD,IAAIsC,KAAKhF,EAAMiF,WAAWC,uBAClF,oBAAIxC,UAAU,8BAAd,SAA6C1C,EAAMvB,QACnD,mBAAGiE,UAAU,uBAAb,SAAqC1C,EAAMtB,cAC3C,sBAAKgE,UAAU,+BAAf,UACI,mBAAGA,UAAU,2DAAb,SAAyE1C,EAAMvC,WAC/E,uBACIiF,UAAU,6IADd,UAEI,cAAC,IAAD,CAAoBA,UAAU,mBAAmB1C,EAAMmE,SAASF,OAChE,cAAC,IAAD,CAAcvB,UAAS,yBAAoBkC,GAAS,mBAAqBf,QAlEhE,6CAkEqF7D,EAAMgE,MAAMC,UAE9G,wBAAQvB,UAAU,+EAAlB,SACI,cAAC,IAAD,CAASA,UAAU,iBAAiBmB,QArE3B,kDAwEjB,gCACA,oBAAInB,UAAW,uDAAf,yBAEI1C,EAAMmE,UAAYC,EAAae,KAAI,SAACC,GAChC,OAAO,cAAC,EAAD,CAAoC3H,SAAU2H,EAAK/D,KAAK5D,SAC/DiB,YAAa0G,EAAK1G,aADgB0G,EAAKlG,aAMnD,qBAAKwD,UAAU,MAAf,SACQ,uBAAMA,UAAU,SAAhB,UACpB,uBACIA,UAAU,2EACVY,KAAK,OACLC,YAAY,yCAAyCrB,SAhEjD,SAACmD,GACbd,EAAUc,EAAIhD,OAAOlB,UAiEjB,wBAAQ0C,QA5DC,SAAC1B,GACdA,EAAEI,iBACFzF,EAASsC,OAAOpB,EAAMgC,EAAMd,GAAGoF,IA0D3B,iCC9FZ,IAyDemE,EAzDgB,WAC3B,MAA0BxI,mBAAS,GAAnC,mBAAO0F,EAAP,KAAcC,EAAd,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAyBxE,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OACf,EAAyBiC,qBAAzB,mBAAayI,GAAb,WAEAlI,qBAAU,WACNuF,MACD,IAEH,IAAMC,EAAQ,uCAAG,sBAAA9I,EAAA,6DAEb0I,EADiBD,EAAQ,GADZ,SAGPI,IAHO,2CAAH,qDAMRE,EAAW,uCAAG,sBAAA/I,EAAA,6DAEhB0I,EADiBD,EAAQ,GADT,SAGVI,IAHU,2CAAH,qDAMXA,EAAQ,uCAAG,kCAAA7I,EAAA,sEACQJ,EAASwC,OAAOtB,EAAO,EAAG2H,GADlC,cACT1H,EADS,OAETC,EAAOD,EAASC,KACpB4H,EAAS5H,GAHI,SAIKpB,EAAS2C,YAAYzB,GAJ1B,OAIP2K,EAJO,OAKPC,EAAQ,GACd/C,EAAMgD,SAAQ,SAACb,GACPA,EAAQ9B,MAAQyC,EAAIE,SAAQ,SAAAb,GAAO,OAAIA,OACvCpJ,QAAQC,IAAImJ,GACZY,EAAME,KAAKd,OAGnBpJ,QAAQC,IAAI+J,GACZF,EAASE,GAbI,4CAAH,qDAkBd,OACI,cADI,CACJ,sBACI,qBAAKlG,UAAU,iBAAf,SACKmD,EAAMV,KAAI,SAACjH,GACR,OAAO,cAACsK,EAAD,CAAevD,UAAW/G,EAAK+G,UAA0B/F,GAAIhB,EAAKgI,IACzEzH,MAAOP,EAAKO,MAAOhB,SAAUS,EAAKmD,KAAK5D,SAAUiB,YAAaR,EAAKQ,YACnEC,MAAOT,EAAKS,MAAOqF,MAAO9F,EAAK8F,MAAOG,SAAUjG,EAAKiG,UAFCjG,EAAKgI,UAKnE,sBAAKxD,UAAU,qCAAf,UACI,wBAAQA,UAAU,0BAA0BmB,QAASoC,EAArD,sBACA,wBAAQvD,UAAU,yBAAyBmB,QAASmC,EAApD,8BCpDD,SAAShJ,IACpB,IAAM6E,EAAWC,cACTZ,EAASI,IAATJ,KACR,EAAyBI,IAAzB,EAAQR,MAAR,EAAe9C,MAmBf,OACI,qCACI,yBAAS0E,UAAU,wDAAnB,SACI,sBAAKA,UAAU,oGAAf,UACI,mBAAG0D,KAAK,KAAK1D,UAAU,0FAAvB,uBACA,sBAAKA,UAAU,6IAAf,UACI,oBAAGA,UAAU,mHAAb,UACI,sBAAMA,UAAU,QAAQmB,QAlB9B,WACdhC,EAAS,UAiBW,kBACA,sBAAMa,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,oEAGvC,oBAAGA,UAAU,oGAAoG,SAAO,mBAAxH,UACI,sBAAMA,UAAU,QAAQmB,QA5B1B,WAClBhC,EAAS,kBA2BW,uBACA,sBAAMa,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,uEAM3C,qBAAKyD,MAAM,0EAAX,SACI,sBAAMA,MAAM,mCAAZ,SACI,mBAAGC,KAAK,IAAID,MAAM,oQACdtC,QA/BN,WAClB3C,IACAW,EAAS,WA4BW,6BAShB,cAAC,EAAD,OCzDG,SAASJ,IACpB,IAAMI,EAAWC,cAKjB,OACI,yBAASY,UAAU,oCAAnB,SACA,sBAAKA,UAAU,qDAAf,UACI,qBAAMA,UAAU,6BAA4BoC,IAAI,+EAChDC,IAAI,YACJ,oBAAIrC,UAAU,0BAAd,uBACA,4DACA,wBAAQmB,QAXF,WACVhC,EAAS,WAUoBa,UAAU,oFAAnC,8BCTZ,IA8CeqG,EA9CQ,WACnB,MAA0B9I,mBAAS,GAAnC,mBAAO0F,EAAP,KAAcC,EAAd,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KACA,EAAyBxE,IAAVtD,GAAf,EAAQ8C,MAAR,EAAe9C,OAEfwC,qBAAU,WACNuF,MACD,IAEH,IAAMC,EAAQ,uCAAG,sBAAA9I,EAAA,6DAEb0I,EADiBD,EAAQ,GADZ,SAGPI,IAHO,2CAAH,qDAMRE,EAAW,uCAAG,sBAAA/I,EAAA,6DAEhB0I,EADiBD,EAAQ,GADT,SAGVI,IAHU,2CAAH,qDAQXA,EAAQ,uCAAG,8BAAA7I,EAAA,sEACQJ,EAASgC,MAAMd,EAAO,QAAS,EAAG2H,GAD1C,OACT1H,EADS,OAETC,EAAQD,EAASC,KACrB4H,EAAS5H,GAHI,2CAAH,qDAMd,OACI,cADI,CACJ,sBACI,qBAAKwE,UAAU,iBAAf,SACHmD,EAAMV,KAAI,SAACjH,GACR,OAAO,cAACmI,EAAD,CAAMpB,UAAW/G,EAAK+G,UAA0B/F,GAAIhB,EAAKgI,IAAKzH,MAAOP,EAAKO,MACjFhB,SAAUS,EAAKmD,KAAK5D,SAAUiB,YAAaR,EAAKQ,YAAaC,MAAOT,EAAKS,MAAOqF,MAAO9F,EAAK8F,MAC5FG,SAAUjG,EAAKiG,UAF8BjG,EAAKgI,UAKtD,sBAAKxD,UAAU,qCAAf,UACI,wBAAQA,UAAU,0BAA0BmB,QAASoC,EAArD,sBACA,wBAAQvD,UAAU,yBAAyBmB,QAASmC,EAApD,8BCzCG,SAASlH,IACpB,IAAM+C,EAAWC,cACTZ,EAASI,IAATJ,KACR,EAAyBI,IAAzB,EAAQR,MAAR,EAAe9C,MAaf,OACI,cADI,CACJ,iBACK,yBAAS0E,UAAU,wDAAnB,SACG,sBAAKA,UAAU,oGAAf,UACI,mBAAG0D,KAAK,KAAK1D,UAAU,0FAAvB,uBACA,qBAAKA,UAAU,8HAAf,SACI,oBAAGmB,QAfF,WACjBhC,EAAS,WAciCa,UAAU,oGAApC,UACI,sBAAMA,UAAU,QAAhB,kBACA,sBAAMA,UAAU,2EAAhB,SACI,sBAAM,SAAO,QAAQA,UAAU,sEAN/C,IAUI,qBAAKyD,MAAM,0EAAX,SACI,sBAAMA,MAAM,mCAAZ,SACI,mBAAGC,KAAK,IAAID,MAAM,oQACdtC,QArBN,WAClB3C,IACAW,EAAS,WAkBW,uCASpB,cAAC,EAAD,O,YCbOmH,MApBf,WACE,OAEE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIjB,QAAS,cAACpE,EAAD,MACzB,cAAC,IAAD,CAAOqF,KAAK,SAASjB,QAAS,cAACpG,EAAD,MAC9B,cAAC,IAAD,CAAOqH,KAAK,KAAKjB,QAAS,cAAC,EAAD,MAG1B,cAAC,IAAD,CAAOiB,KAAK,SAASjB,QAAS,eAAC,EAAD,CAAS5J,KAAK,QAAd,cAAuB,cAAC6J,EAAD,SACrD,cAAC,IAAD,CAAOgB,KAAK,YAAYjB,QAAS,eAAC,EAAD,CAAS5J,KAAK,QAAd,cAAuB,cAACU,EAAD,SACxD,cAAC,IAAD,CAAOmK,KAAK,QAAQjB,QAAS,eAAC,EAAD,CAAS5J,KAAK,OAAd,cAAsB,cAAC,EAAD,SACnD,cAAC,IAAD,CAAO6K,KAAK,gBAAgBjB,QAAS,eAAC,EAAD,CAAS5J,KAAK,OAAd,cAAsB,cAAC,EAAD,eCbpD8K,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrC,MAAK,YAAkD,IAA/CsC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.58438d37.chunk.js","sourcesContent":["const BASE_URL = \"https://posts-pw2021.herokuapp.com/api/v1\"/* La URL Base para no repetirla siempre */\r\n\r\nconst Services = {};/* nuestro arreglo de funciones poder llamarlas */\r\n\r\n/* Services.{Algo} es para guardar la funcion en Services */\r\n/* Todos los metodos tienen un TryCatch ahora o luego cuando se utilicen*/\r\n\r\n//Es el unico que no necesita token\r\nServices.loginAdmin = async (User, Pass) => {/* Login, necesita usuario y contraseña */\r\n\r\n    const Response = await fetch(`${BASE_URL}/auth/signin`, {\r\n        method: \"POST\",/* Medodo a utilizar */\r\n        headers: {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({/* Para convertir a string nuestros datos */\r\n            username: `${User}`,\r\n            password: `${Pass}`\r\n        })\r\n    })\r\n    if (Response.ok) {/* La respuesta esta bien */\r\n        const Token = await Response.json()\r\n        return Token\r\n    }\r\n    return {};/* No esta bien la respuesta no nos da nada */\r\n}\r\n\r\n//Verificar nuestro token, de nuestro usuario\r\nServices.verifyToken = async (token) => {\r\n    const response = await fetch(`${BASE_URL}/auth/whoami`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Authorization\": `Bearer ${token}`\r\n        }\r\n    });\r\n    if (response.ok) {\r\n        const data = await response.json();\r\n        return data;\r\n    }\r\n    return {};\r\n}\r\n\r\n//Pasamos a las que necesitan role de ADMIN\r\nServices.createPost = async (Token, role, Title, Description, Imagen) => {/* Create post con sus parametros */\r\n    try {                                                                  /* y role para verificar */\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/create`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    title: `${Title}`,\r\n                    description: `${Description}`,\r\n                    image: `${Imagen}`,\r\n                })\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {/* Si nos da error */\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.Owned = async (Token, role, limit, page) => {/* Funcion para verificar nuestros POST */\r\n    try {\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/owned?limit=${limit}&page=${page}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                }\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.Toggle = async (Token, role, id) => {/* Funcion para activar o desactivar posts */\r\n    try {\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/toggle/${id}`, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                }\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n\r\nServices.Update = async (Token, role, id, Title = \"\", Description = \"\", Imagen = \"\") => {\r\n    try {                       /* Funcion Update obtienen un post y sus parametros en \"nulo\" por defecto */\r\n        if (role === \"admin\") {\r\n            const Response = await fetch(`${BASE_URL}/post/update/${id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    title: `${Title}`,\r\n                    description: `${Description}`,\r\n                    image: `${Imagen}`,\r\n                })\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n//servicios sin admin (pueden hacerse con usuario)\r\n\r\nServices.Commet = async (Token, id, text) => {/* Comment que revice el ID y nuestro texto de comentario */\r\n    try {\r\n        if (text === \"\") {\r\n            return {} /* retorna nada si no hay comentario y no se agrega */\r\n        } else {\r\n            const Response = await fetch(`${BASE_URL}/post/comment/${id}`, {\r\n                method: \"PATCH\",\r\n                headers: {\r\n                    Authorization: `Bearer ${Token}`,\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    description: text,\r\n                })\r\n            })\r\n            const data = await Response.json()\r\n            console.log(data)\r\n            return data\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.GetAll = async (token, limit, page) => {/* Obtener todos con sus Props Limit y page, para poder luego hacer el InfiniteScroll */\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/all?limit=${limit}&page=${page}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.Like = async (Token, id) => {/* Funcion Dar y Quitar like */\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/like/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${Token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n\r\n/* Agrengando parte para los favoritos */\r\n\r\n/* Agregando favorito */\r\nServices.AddFavorite = async (Token, id) => {\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/fav/${id}`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                Authorization: `Bearer ${Token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log()\r\n    }\r\n}\r\n/* Obteniendo todos los favoritos */\r\nServices.GetFavorite = async (token) => {\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/fav`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nServices.GetOne = async (token, id) => {/* Obtener uno con su ID */\r\n    try {\r\n        const Response = await fetch(`${BASE_URL}/post/one/${id}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n            }\r\n        })\r\n        const data = await Response.json()\r\n        console.log(data)\r\n        return data\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport default Services;/* Exportando servicios  */\r\n\r\n/* para llamar a las funciones\r\n//llamar al login\r\nlogin(\"gp22_admin\",\"t7kCJjgNd9BGkpgE\")\r\n\r\n// llamar a create post admin only\r\ncreatePost(token, role, \"asdasdasdasd\",\"asdasdasdasda\",\"asdasdasdasd\")\r\n\r\n//llamar a owned admin only\r\naOwned(token,role, 15, 0)\r\n\r\n//llamar a toggle admin only\r\nToggle(token, role, \"6193113ec0eacd88db877059\")\r\n\r\n//lammar a getall\r\nGetAll(token, 15,0)\r\n\r\n//llamar a like\r\nLike(token, \"6193113ec0eacd88db877059\")\r\n\r\n\r\n//llamar a comentario\r\nCommet (token,\"6193113ec0eacd88db877059\",\"increiasdasdble post wow\")\r\n\r\n//llamar a update\r\nUpdate(token ,role,\"6193113ec0eacd88db877059\",\"la mejor descrion de los post\",\"asdasasdasda\",\"asdasdasda\")\r\n\r\nGetFavorite(token)\r\nAddFavorite(token)\r\n*/","import React, { useCallback, useMemo, useState, useEffect, } from \"react\";\r\nimport Services from \"../Services/UserServices\";\r\n//agregando nuestros servicios y react\r\n\r\nconst UserContext = React.createContext();\r\nconst TOKEN_KEY = \"token\";\r\n/* agregamos nuestro key token y reactcontent como variable */\r\nexport const Provider = (props) => {/* Nuestro provider con props y lo exportamos */\r\n    const [Token, setToken] = useState(undefined);\r\n    const [User, setUser] = useState(undefined);\r\n    //declaramos variables de UseState\r\n\r\n    const GetAllTokens = (Token) => {\r\n        localStorage.setItem(TOKEN_KEY, Token);\r\n        setToken(Token);\r\n    }/* Tomamos nuestro token */\r\n\r\n    useEffect(() => {/* Usefect para poder verificar el role y el usuario ademas de token */\r\n        const VerifyToken = async () => {\r\n            const TheToken = getToken();\r\n\r\n            if (TheToken) {\r\n                const { username, role } =\r\n                    await Services.verifyToken(TheToken);\r\n                if (username && role) {\r\n                    setUser({ username, role });\r\n                    GetAllTokens(TheToken);\r\n                }\r\n            }\r\n        }\r\n\r\n        VerifyToken();\r\n    }, [Token])/* se recarga siempre con el token */\r\n\r\n    const LOgin = useCallback((username, password) => {/* Nuestra funcion login para poder entrar  */\r\n        const login = async () => {\r\n            let status = false;\r\n            try {\r\n                const { token: tokenQ } = await Services.loginAdmin(username, password);\r\n                if (tokenQ) {\r\n                    GetAllTokens(tokenQ);\r\n                    status = true;\r\n                }\r\n            } catch (error) {/* Con validaciones de error y trycatch */\r\n                console.error(error);\r\n                console.error(\"Error in credentials\");\r\n            } finally {\r\n                return status;\r\n            }\r\n        };\r\n\r\n        return login();\r\n    }, [])\r\n\r\n    const Exit = useCallback(() => {/* nuestro Logout esta aqui */\r\n        setUser(undefined);\r\n        GetAllTokens(undefined);\r\n    }, [])\r\n\r\n    const value = useMemo(() => ({/* Memoriza todas nuestras \"funciones\" */\r\n        token: Token,\r\n        user: User,\r\n        login: LOgin,\r\n        Exit: Exit\r\n    }), [Token, User, LOgin, Exit]);\r\n\r\n    return <UserContext.Provider value={value} {...props} />;\r\n}\r\n\r\nexport const useUserContext = () => {/* Nuestro use context con validaciones de errores */\r\n    const contexts = React.useContext(UserContext);\r\n    if (!contexts) {\r\n        throw new Error(\"useUserContext() must be inside of UserProvider\");\r\n    }\r\n    return contexts;\r\n}\r\n\r\nconst getToken = () => localStorage.getItem(TOKEN_KEY); /* definimos get token para la parte de arriba en useffect  */\r\n","import { useNavigate } from 'react-router-dom';\r\nimport { useEffect, useState } from \"react\";\r\nimport { useUserContext } from '../../Contexts/Context';\r\n/* llamando a Context */\r\nimport { UilKeyholeCircle } from '@iconscout/react-unicons'\r\nimport { UilUserCircle } from '@iconscout/react-unicons'\r\n//Notificaciones\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n//para poder decidir si es admin o user\r\nconst routes = {\r\n    \"admin\": \"/admin\",\r\n    \"user\": \"/user\"\r\n}\r\n\r\n\r\nexport default function Login() {/* Declarando funcion retornada como Login(Mayuscula la primera letra\r\n    ya que da error,si no lo esta) */\r\n\r\n    /* declarando e inicializando nuestros Usestates */\r\n    const contexts = useUserContext();\r\n    const navigate = useNavigate(); \r\n    const { login, token } = useUserContext();\r\n    const [error, setError] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    /* notificando al usuario que tiene las credenciales incorrectas */\r\n    const notify = () => toast.error(\"Usuario o contraseña incorrectos\");\r\n    const notifyEmpty = () => toast.error(\"Usuario o contraseña vacios\");\r\n\r\n    const onChange = (e, save) => {/* Para que no se recargue la pagina */\r\n        save(e.target.value);\r\n    }\r\n\r\n    const onClickHandler = async (e) => {/* Cuando damos click al boton llamar a la funcion login */\r\n        e.preventDefault(); //para que no se recargue\r\n        if(username === '' || password === ''){//Validacion si esta vacio\r\n            notifyEmpty();}\r\n        else{\r\n            const logged = await login(username, password); //espedando funcion login\r\n\r\n            setError(!logged); //vaciar y tirar notificacion si está malo el login\r\n            setUsername(\"\");\r\n            setPassword(\"\");\r\n            \r\n            if (!logged) {\r\n                notify();\r\n            } \r\n        }\r\n    }\r\n\r\n    useEffect(() => {/* Userefect para ver que user es y redireccionar si ya estas logueado tambien*/\r\n        if (contexts.user) {\r\n            navigate(routes[contexts.user.role] ?? \"/\");\r\n        }\r\n    }, [contexts.user]);\r\n\r\n    /* (\"gp22_admin\",\"t7kCJjgNd9BGkpgE\") credenciales de nuestro grupo para pruebas*/\r\n    return(//nuestra aplicacion con clases\r\n        <section className=\"bg-gray-600\"> {/* estilo del login y boton aceptar */}\r\n        <form onSubmit={onClickHandler} className=\"flex flex-col justify-center items-center\r\n            w-48 max-w-screen-sm mx-auto h-screen md:w-auto lg:w-80\">\r\n                <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n                <div className=\"space-y-5 bg-gray-700 px-9 py-9 md:px-20 md:py rounded-md\">\r\n                    <div className=\"flex flex-col space-y-1\">\r\n                        <label htmlFor=\"username\" \r\n                        className=\"text-white inline-flex gap-2 text-xl font-bold items-center\">\r\n                            Usuario <UilUserCircle/>{/* Mas estilo y unas finciones para utilizar nuestros handler */}\r\n                        </label>\r\n                        <input type='text' \r\n                        value={username} \r\n                        placeholder='Ingresa tu usuario'\r\n                        onChange={(e) => onChange(e, setUsername)}\r\n                        className=\"rounded-lg py-2 px-1\"/>\r\n                    </div>\r\n                    <div className=\"flex flex-col space-y-1\" >\r\n                        <label htmlFor=\"password\" \r\n                        className=\"text-white  inline-flex  gap-2 text-xl items-center font-bold\">\r\n                            Contraseña <UilKeyholeCircle/>\r\n                        </label>\r\n                        <input type=\"password\" value={password}/* contraseña tipo Password y mas validaciones */\r\n                        placeholder='Contraseña'\r\n                        onChange={(e) => onChange(e, setPassword)}\r\n                        className=\"rounded-lg py-2 px-1\"/>\r\n                    </div>\r\n                    <button \r\n                    className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg w-full\">\r\n                        Ingresar{/* Boton ingresar que antes vimos como hacerle sumit */}\r\n                    </button>\r\n                </div>\r\n        </form>\r\n        </section>\r\n    );\r\n}","import { useUserContext } from './../../Contexts/Context';\r\nimport { Navigate } from 'react-router-dom';\r\n// imports de react y content\r\nconst Private = ({ role = \"user\", children }) => {/* pedimos los props que nos vienen desde app.js */\r\n    const { token, user } = useUserContext();/* validamos nuestros parametros para poder retornar en caso de que no tengamos */\r\n\r\n    if (!token) return <Navigate replace to=\"/login\" />;\r\n    if (!user || user.role !== role) return <Navigate replace to=\"/404\" />;\r\n    return children;\r\n}\r\n\r\nexport default Private;/* exportamos */","import { useNavigate } from 'react-router-dom';\r\n//importando user Navigate\r\n\r\nexport default function Home() { //nuestro home donde ingresan las personas por primera vez\r\n    const navigate = useNavigate();\r\n\r\n    const EnterHandler = () => { //Handler que manda al login al darle al boton\r\n        navigate(\"/Login\");\r\n    }\r\n\r\n    return(\r\n        <section className=\"bg-gray-700\">{/* un poco de estilo con amimacion y un boton */}\r\n        <div className=\"flex flex-col justify-center items-center\r\n        w-80 max-w-screen-sm mx-auto h-screen md:w-auto \">\r\n            <button onClick= {EnterHandler} className=\"bg-gray-400 animate-pulse rounded-3xl text-lg h-52 w-80 p-3 border-4 focus:animate-none\"> ENTRAR A UCA PAGES</button>\r\n        </div>\r\n        </section>\r\n    )\r\n}","import React from \"react\";\r\n\r\nconst CommentCardContainer = (props) => {// seccion para los comentarios\r\n    return (\r\n        <div className=\"py-2\">\r\n            <h1 className=\"font-bold text-lg text-blue-600\">{props.username}:</h1>\r\n            <p>{props.description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentCardContainer;","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { UilSmileBeam } from '@iconscout/react-unicons'\r\nimport { UilStar } from '@iconscout/react-unicons'\r\nimport { UilCommentAltLines } from '@iconscout/react-unicons'\r\nimport Services from \"../Services/UserServices\";\r\nimport { useUserContext } from \"../Contexts/Context\";\r\nimport { useEffect } from \"react\"\r\nimport CommentCardContainer from \"./CommentContainer\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n//importamos\r\n\r\nconst reloadFaster = () => {/* funcion para recargar */\r\n    setTimeout(function(){\r\n        window.location.reload();\r\n    }   ,1000);\r\n}\r\n\r\nexport default function CardUser(props) {/* exportamos nuestro Card */\r\n/* Declaramos variables */\r\n    const { login, token } = useUserContext();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [likes, setLikes] = useState(props.likes.length);\r\n    const [commentState, setCommentState] = useState(props.comments);\r\n    const [commet, setcommet] = useState(\"\")\r\n\r\n    /* Funcion para tener usuario */\r\n    const getUsernamer = async () => {\r\n    const response = await Services.verifyToken(token);\r\n    const username = response.username;\r\n    setUsername(username);\r\n    console.log(username);\r\n    setCommentState(props.comments);\r\n}\r\n/* para el error de los caracteres */\r\nconst notifyErrorTitle = () => toast.error(\"El comentario debe tener minimo 8 caracteres\");\r\nconst notifyErrorEmpty = () => toast.error(\"No puedes hacer un comentario vacio\");\r\nconst notifyfav = () => toast(\"Favorito Agregado/Removido\");\r\n\r\n    const [liked, setLiked] = useState(props.likes.some((it) => it.username === username));\r\n\r\n    useEffect(() => {/* use efect para poder recargar usuario */\r\n        getUsernamer();\r\n    }, []);\r\n\r\n    const SetData = (val) =>{/* obtener valor de un input */\r\n        setcommet(val.target.value)\r\n    }\r\n\r\n\r\n\r\n    const addcoment =(e) =>{/* para agregar comentario y validaciones espeficificas */\r\n        e.preventDefault();\r\n        if (commet === \"\") {\r\n            notifyErrorEmpty();\r\n        }\r\n        else if (commet.length < 8) {\r\n            notifyErrorTitle();\r\n        }\r\n        else{\r\n        Services.Commet(token,props.id,commet)/* agregar comentario y recargar */\r\n        reloadFaster();\r\n        }\r\n    }\r\n\r\n    async function likePost() {/* darle like a un post */\r\n        await Services.Like(token, props.id);\r\n\r\n        if (!liked) {\r\n            setLikes(likes + 1);\r\n            setLiked(true);\r\n        } else {\r\n            setLikes(likes - 1);\r\n            setLiked(false);\r\n        }\r\n    }\r\n    \r\n\r\n    async function addToFavorites() {/* Añadir a favoritos */\r\n        const favorited = await Services.AddFavorite(token, props.id); \r\n        notifyfav();\r\n    }\r\n\r\n    return (\r\n        <>\r\n                <div className=\"p-4 sm:w-1/2 lg:w-1/3\">\r\n                    <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    />\r\n                    <div className=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\r\n                        <img className=\"lg:h-72 md:h-48 w-full object-cover object-center\"\r\n                            src={props.image} alt=\"Post img\"/>\r\n                        <div className=\"p-6 transition duration-300 ease-in\">\r\n                            <h2 className=\"text-sm font-medium text-gray-400 mb-1\">{new Date(props.createdAt).toLocaleDateString()}</h2>\r\n                            <h1 className=\"text-2xl font-semibold mb-3\">{props.title}</h1>\r\n                            <p className=\"leading-relaxed mb-3\">{props.description}</p>\r\n                            <div className=\"flex items-center flex-wrap \">\r\n                                <a className=\"text-indigo-300 inline-flex items-center md:mb-2 lg:mb-0\">{props.username}</a>\r\n                                <span\r\n                                    className=\"text-gray-400 mr-3 inline-flex space-x-3 items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200\">\r\n                                    <UilCommentAltLines className=\"cursor-pointer\"/>{props.comments.length}\r\n                                    <UilSmileBeam className={`cursor-pointer ${liked && 'text-yellow-400'}`} onClick={likePost}/>{props.likes.length}\r\n                                </span>\r\n                                <button className=\"text-yellow-400 inline-flex items-center leading-none text-sm cursor-pointer\">\r\n                                    <UilStar className=\"cursor-pointer\" onClick={addToFavorites}/>\r\n                                </button>\r\n                            </div>\r\n                            <div>\r\n                            <h2 className= \"text-lg font-semibold text-center text-gray-400 mt-4\">Comentarios</h2>\r\n                            {\r\n                                props.comments && commentState.map((item) => {\r\n                                    return <CommentCardContainer key={item.id} username={item.user.username} description={item.description}/>\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-5\">\r\n                                <form className=\"w-full space-y-2\" >\r\n            <input\r\n                className=\"px-4 py-2 w-full rounded-lg text-gray-800 border border-gray-500 text-sm\"\r\n                type=\"text\"\r\n                placeholder=\"Escribe y presiona el boton\" onChange={SetData}\r\n            />\r\n            <button className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded-lg transition \"\r\n                onClick={addcoment}>Agregar comentario</button>\r\n            </form>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )}\r\n\r\n","import Services from \"../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport CardUser from \"./CardUser\";\r\nimport { useUserContext } from '../Contexts/Context';\r\n//importando\r\n\r\nconst PostContainerUser = () => {\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const { login, token } = useUserContext();\r\n        //delcarando variables y usando el useEffect\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n        //cambiando de pagina\r\n    const nextPage = async () => {\r\n        const newPages = pages + 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => {\r\n        const newPages = pages - 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n        //obteniendo post\r\n    const getPosts = async () => {\r\n        let response = await Services.GetAll(token, 6, pages)\r\n        let data =  response.data;\r\n        setPosts(data);\r\n    }\r\n\r\n    return (/* Vista de pagina */\r\n        <>\r\n            <div className=\"flex flex-wrap\">\r\n        {posts.map((data)=>{\r\n            return <CardUser createdAt={data.createdAt} key={data._id} id={data._id} title={data.title} \r\n            username={data.user.username} description={data.description} image={data.image} likes={data.likes} \r\n            comments={data.comments} />\r\n            })}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-5 mb-3\">\r\n            <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n            <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostContainerUser;//exportando","import { useUserContext } from '../../Contexts/Context';\r\nimport { useNavigate } from \"react-router\";\r\nimport PostContainerUser from \"../../Components/PostContainerUser\";\r\n//Ñlamando a nuestros imports\r\n\r\n  export default function User() { //Nuestra funcion exportada\r\n    const navigate = useNavigate()\r\n    const { Exit } = useUserContext()\r\n    const { login, token } = useUserContext();\r\n    //Declarando nuestros useNavigate y useUserContext\r\n\r\n    //Handlers\r\n\r\nconst EnterHome = () => { // ir a \"User\" en react-router\r\n  navigate(\"/user\")\r\n}\r\n\r\nconst EnterFavorite = () => {// ir a \"userfavorite\" en react-router\r\n    navigate(\"/userfavorite\")\r\n}\r\n\r\nconst LogoutHandler = () => {// HacerLogout y volver al login\r\n    Exit()\r\n    navigate(\"/Login\")\r\n}\r\n\r\n  return (\r\n    <> {/* Nuestro estilo de pagina */}\r\n      <section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n        <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n          <a className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n            <nav className=\"top-0 left-0 z-0 cursor-pointer flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n              <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 cursor-pointer transition duration-150 ease-out \">\r\n                  <span className=\"block\" onClick={EnterHome}>Home</span>{/* botones home y favoritos en encabezado */}\r\n                    <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                        <span className=\"block\" onClick={EnterFavorite}>Favorites</span>\r\n                        <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                            <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                        </span>\r\n                    </a>\r\n                    \r\n                </nav>\r\n                      {/* boton Logout para salir */}\r\n                <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                    <span class=\"inline-flex rounded-md shadow-sm\">\r\n                        <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                        onClick={LogoutHandler}>\r\n                            Logout\r\n                        </a>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n    </section>\r\n    {/* Post exclusivo para User en Componentes */}\r\n    <PostContainerUser/>\r\n    </>\r\n  );\r\n\r\n}\r\n","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { UilEditAlt } from '@iconscout/react-unicons'\r\nimport { UilSmileBeam } from '@iconscout/react-unicons'\r\nimport { UilStar } from '@iconscout/react-unicons'\r\nimport { UilAndroidPhoneSlash } from '@iconscout/react-unicons'\r\nimport { useUserContext } from \"../Contexts/Context\"\r\nimport { useEffect } from \"react\"\r\nimport Services from \"../Services/UserServices\";\r\nimport CommentCardContainer from \"./CommentContainer\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport default function Card(props) {\r\n\r\n    const { login, token } = useUserContext(); // estado para el token\r\n\r\n    const reloadFaster = () => { // funcion para recargar la pagina mas rapido\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,1000);\r\n    }\r\n\r\n    const [username, setUsername] = useState(\"\"); // estado para el username\r\n    const [likes, setLikes] = useState(props.likes.length); // estado para los likes\r\n    const [commentState, setCommentState] = useState(props.comments); // estado para los comentarios\r\n    const [commet, setcommet] = useState(\"\") // estado para el comentario a enviar\r\n\r\n    const notifyErrorTitle = () => toast.error(\"El comentario debe tener minimo 8 caracteres\"); // notificacion de error en el titulo\r\n    const notifyErrorEmpty = () => toast.error(\"No puedes hacer un comentario vacio\");// notificacion de error en los campos\r\n    const notifyfav = () => toast(\"Favorito Añadido/Removido\");\r\n    \r\n    const getUsername = async () => { // funcion para obtener el username\r\n    const response = await Services.verifyToken(token); // obtenemos el token\r\n    const username = response.username; // obtenemos el username\r\n    setUsername(username); // seteamos el username\r\n    setCommentState(props.comments); // seteamos los comentarios\r\n    /*console.log(username); \r\n    console.log(commentState);*/ // para verificar que funciona\r\n    }\r\n\r\n    const [liked, setLiked] = useState(props.likes.some((item) => item.username === username)); // estado para saber si el usuario ya le dio like al post\r\n\r\n\r\n    useEffect(() => { // funcion para obtener el username\r\n        getUsername();\r\n    }, []);\r\n\r\n    const SetData = (val) =>{ // funcion para setear el comentario\r\n        setcommet(val.target.value)\r\n    }\r\n\r\n    const addcoment =(e) =>{ // funcion para agregar un comentario\r\n        e.preventDefault();\r\n        if (commet === \"\") { // si el comentario esta vacio notificamos de error\r\n            notifyErrorEmpty();\r\n        }\r\n        else if (commet.length < 8) { // si el comentario tiene menos de 8 caracteres notificamos de error\r\n            notifyErrorTitle();\r\n        }\r\n        else{ // si no hay error agregamos el comentario al post y recargamos la pagina\r\n        Services.Commet(token,props.id,commet)\r\n        reloadFaster();\r\n        }\r\n    }\r\n\r\n    async function likePost() { // funcion para dar like al post \r\n        await Services.Like(token, props.id); // llamamos al servicio para dar like al post\r\n        if (!liked) { \r\n            setLikes(likes + 1);\r\n            setLiked(true);\r\n        } else {\r\n            setLikes(likes - 1);\r\n            setLiked(false);\r\n        }\r\n    }\r\n\r\n    async function addToFavorites() { // funcion para agregar el post a favoritos\r\n        const favorited = await Services.AddFavorite(token, props.id);  \r\n        notifyfav()      \r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n                <div className=\"p-4 sm:w-1/2 lg:w-1/3\">\r\n                    <ToastContainer\r\n                        position=\"top-center\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                        />\r\n                    <div className=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\r\n                        <img className=\"lg:h-72 md:h-48 w-full object-cover object-center\"\r\n                            src={props.image} alt=\"Post img\"/>\r\n                        <div className=\"p-6 transition duration-300 ease-in\">\r\n                            <h2 className=\"text-sm font-medium text-gray-400 mb-1\">{new Date(props.createdAt).toLocaleDateString()}</h2>\r\n                            <h1 className=\"text-2xl font-semibold mb-3\">{props.title}</h1>\r\n                            <p className=\"leading-relaxed mb-3\">{props.description}</p>\r\n                            <div className=\"flex items-center flex-wrap \">\r\n                                <a className=\"text-indigo-300 inline-flex items-center md:mb-2 lg:mb-0\">{props.username}</a>\r\n                                <span className=\"text-gray-400 cursor-pointer mr-10 inline-flex items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm border-gray-200\">\r\n                                    <UilSmileBeam className={`cursor-pointer ${liked && 'text-yellow-400'}`} onClick={likePost}/>{props.likes.length}\r\n                                </span>\r\n                                <span className=\"text-gray-400 inline-flex items-center leading-none text-sm\">\r\n                                    <UilStar className=\"cursor-pointer\" onClick={addToFavorites} />\r\n                                </span>\r\n                                <span className=\"text-gray-400 inline-flex items-center leading-none text-sm\">\r\n                                    <UilAndroidPhoneSlash/>\r\n                                </span>\r\n                                <span className=\"text-gray-400 inline-flex items-center leading-none text-sm cursor-pointer\">\r\n                                    <UilEditAlt/>\r\n                                </span>\r\n                            </div>\r\n                            <div >\r\n                            <h2 className= \"text-lg font-semibold text-center text-gray-400 mt-4\">Comentarios</h2>\r\n                            {\r\n                                props.comments && commentState.map((item) => {\r\n                                    return <CommentCardContainer key={item.id} username={item.user.username} \r\n                                    description={item.description}/>\r\n                                })\r\n                            }\r\n                            </div>\r\n                            <div className=\"p-5\">\r\n                                <form className=\"w-full\" >\r\n                                    <input\r\n                                        className=\"px-4 py-2 w-full rounded-lg text-gray-800 border border-gray-500 text-sm\"\r\n                                        type=\"text\"\r\n                                        placeholder=\"Escribe y presiona el boton\" onChange={SetData}\r\n                                    />\r\n                                    <button className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 mt-2 rounded-lg transition \"\r\n                                    onClick={addcoment}>Añadir comentario</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )}\r\n\r\n","import Services from \"../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from \"./Card\";\r\nimport { useUserContext } from '../Contexts/Context';\r\n//importamos\r\n\r\nconst PostContainer = () => {\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const { login, token } = useUserContext();//obtener el token\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n        //cambiando paginas\r\n    const nextPage = async () => {\r\n        const newPages = pages + 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => {\r\n        const newPages = pages - 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n        //obteniendo post\r\n    const getPosts = async () => {\r\n        let response = await Services.GetAll(token, 6, pages)\r\n        let data =  response.data;\r\n        setPosts(data);\r\n    }\r\n\r\n    \r\n\r\n    return (/* Nuestra pagina con cards */\r\n        <> \r\n            <div className=\"flex flex-wrap\">\r\n        {posts.map((data)=>{\r\n            return <Card createdAt={data.createdAt} key={data._id} id={data._id} title={data.title} \r\n            username={data.user.username} description={data.description} \r\n            image={data.image} likes={data.likes} comments={data.comments}/>\r\n            })}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-5 pb-5\">\r\n            <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n            <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostContainer; //exportamos","import { useState } from 'react';\r\nimport { useUserContext } from '../../Contexts/Context';\r\nimport Services from '../../Services/UserServices';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport default function CreatePost() {\r\n    const { login, token } = useUserContext(); //obtenemos el token \r\n    const [title, setTitle] = useState(\"\")  //estado del titulo\r\n    const [descrip, setdescrip] = useState(\"\") //estado de la descripcion\r\n    const [img, setimg] = useState(\"\") //estado de la imagen\r\n\r\n    const notifySucces = () => toast(\"Post creado exitosamente\"); //notificacion de exito\r\n    const notifyErrorTitle = () => toast.error(\"El titulo debe tener entre 8 y 32 caracteres\"); //notificacion de error en el titulo\r\n    const notifyErrorEmpty = () => toast.error(\"Todos los campos son oblogatorios y no pueden quedar vacios\"); //notificacion de error en los campos\r\n\r\n    const SetData = (val) =>{ //funcion para setear el titulo\r\n        setTitle(val.target.value)\r\n    }\r\n\r\n    const SetData2 = (val) =>{ //funcion para setear la descripcion\r\n        setdescrip(val.target.value)\r\n    }\r\n\r\n    const SetData3 = (val) =>{ //funcion para setear la imagen\r\n        setimg(val.target.value)\r\n    }\r\n    const CreateNewPost = () => { //funcion para crear un nuevo post\r\n        if (title === \"\" || descrip ===\"\" || img===\"\") {\r\n            notifyErrorEmpty();\r\n        }else if (title.length < 9 || title.length > 33 || descrip.length < 9) {\r\n            notifyErrorTitle();\r\n        }else{\r\n            notifySucces(); //notificacion de exito\r\n            Services.createPost(token, \"admin\", title,descrip,img)\r\n            .then(res => {\r\n                console.log(res);\r\n            }, err => {\r\n                console.log(err);\r\n            }\r\n            )\r\n            reloadPage(); //reload de la pagina\r\n        }\r\n        \r\n    }\r\n\r\n    const reloadPage = () => { //funcion para recargar la pagina\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,5000);\r\n    }\r\n\r\n    const reloadFaster = () => { //funcion para recargar la pagina rapidamente\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,1000);\r\n    }\r\n\r\n    return(\r\n        <div className=\"bg-gray-800 w-96 h-96 rounded-lg mx-auto mt-5\" id=\"form\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n                <div className=\"text-center flex flex-col space-y-3 mx-5 pt-7\">\r\n                <h2 className=\"text-white font-bold text-xl\">\r\n                    Titulo:\r\n                </h2>\r\n                <input id=\"titulo\" type=\"text\" placeholder=\"Inserte su titulo\" onChange={SetData} className=\"rounded-xl p-2\"/>\r\n                <h2 className=\"text-white font-bold text-xl\">\r\n                    Descripción:\r\n                </h2>\r\n                <input id=\"Description\" type=\"text\" placeholder=\"Inserte una descripcion\" onChange={SetData2} className=\"rounded-xl p-2\"/>\r\n                <h2 className=\"text-white font-bold text-xl\">\r\n                    Imagen:\r\n                </h2>\r\n                <input id=\"Imagen\" type=\"text\" placeholder=\"(Use una URL valida)\" onChange={SetData3} className=\"rounded-xl p-2\"/>\r\n                <div className=\"space-x-5\">\r\n                    <button onClick={CreateNewPost} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition \">Subir post</button>\r\n                    <button onClick={reloadFaster} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded transition \">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { useUserContext } from \"../Contexts/Context\"\r\nimport { useEffect } from \"react\"\r\nimport Services from \"../Services/UserServices\";\r\n\r\nexport default function CardToggle(props) { \r\n\r\n    const { login, token } = useUserContext(); // estado para el token\r\n\r\n    const [username, setUsername] = useState(\"\"); // estado para el username\r\n\r\n    const getUsername = async () => { // funcion para obtener el username\r\n    const response = await Services.verifyToken(token); // funcion para verificar el token del usuario\r\n    const username = response.username; // estado para el username\r\n    setUsername(username); // seteamos el username\r\n}\r\n    useEffect(() => { // funcion para obtener el username\r\n        getUsername();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n                <div className=\"p-4 sm:w-1/2 lg:w-1/3\">\r\n                    <div className=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\r\n                        <div className=\"p-6 transition duration-300 ease-in\">\r\n                            <h1 className=\"text-2xl font-semibold mb-3\">{props.title}</h1>\r\n                            <p>{props.id}</p>\r\n                            <p className=\"leading-relaxed mb-3\">{props.description}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )}","import Services from \"../../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport CardToggle from \"../cardToggle\";\r\nimport { useUserContext } from '../../Contexts/Context';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function ToggleP() { \r\n    const [pages, setPages] = useState(0);  // estado para el numero de paginas\r\n    const [posts, setPosts] = useState([]); // estado para los posts\r\n    const { login, token } = useUserContext(); // estado para el token\r\n    const [id, setid] = useState(); // estado para el id del post\r\n\r\n    useEffect(() => { // funcion para obtener los posts\r\n        getPosts();\r\n    }, []);\r\n\r\n    const nextPage = async () => { // funcion para la siguiente pagina\r\n        const newPages = pages + 1;\r\n        await setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => { // funcion para la pagina anterior\r\n        const newPages = pages - 1;\r\n        await setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const reloadFaster = () => { // funcion para recargar la pagina\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,1000);\r\n    }\r\n\r\n    const reloadPage = () => { // funcion para recargar la pagina mas rapido\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,5000);\r\n    }\r\n\r\n    const notifySucces = () => toast(\"Toggle realizado con exito\"); // notificacion de exito\r\n\r\n    //Aca basicamente solo el admin puede acceder a esta pagina asi que \r\n    //por ese motiivo se hace la funcion asi\r\n    const getPosts = async () => {\r\n        let response = await Services.Owned(token, \"admin\", 6, pages)\r\n        let data = response.data;\r\n        setPosts(data);\r\n    }\r\n\r\n    const GetValue = (val) =>{ // funcion para obtener el id del post\r\n        setid(val.target.value)\r\n    }\r\n\r\n    const Active_desactive = () =>{ // funcion para activar o desactivar el post\r\n        Services.Toggle(token,\"admin\",id)\r\n        notifySucces();\r\n        reloadPage();\r\n    }\r\n\r\n    return (\r\n        \r\n        <>\r\n            <div className=\"flex flex-wrap\">\r\n                {posts.map((data) => {\r\n                    return <CardToggle createdAt={data.createdAt} id={data._id} title={data.title} isOwnedPage={false}/>\r\n                })}\r\n            </div>\r\n            <div className=\"flex justify-center space-x-5 pb-5\">\r\n                <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n                <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n            </div>\r\n            <div className=\"bg-gray-800 text-white w-48 mx-auto p-5 rounded-md space-y-3\">\r\n                <div className=\"text-center space-y-4\">\r\n                    <h1 className=\"\">Ingrese id</h1>\r\n                    <input className=\"text-black w-20 p-2 rounded mx-auto\" type=\"text\" placeholder=\"id\" onChange={GetValue}/>\r\n                </div>\r\n                <div className=\"text-center space-y-3 mt-2\">\r\n                    <button className=\"bg-blue-400 hover:bg-blue-700 transition p-2 rounded-lg\" onClick={Active_desactive}>Activar/Desactivar</button>\r\n                    <button className=\"bg-red-400 hover:bg-red-700 transition p-2 rounded-lg\" onClick={reloadFaster}>Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useUserContext } from '../../Contexts/Context';\r\nimport Services from \"../../Services/UserServices\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default function UpdatePostC() {\r\n    const [postName, setpostName] = useState(\"\") // estado para el nombre del post\r\n    const [posts, setPosts] = useState([]); // estado para los posts\r\n    const [postFound, setPostFound] = useState([]); // estado para el post encontrado\r\n    const { login, token } = useUserContext(); // estado para el token\r\n    const [title, setTitle] = useState(\"\") // estado para el titulo del post\r\n    const [descrip, setdescrip] = useState(\"\") // estado para la descripcion del post\r\n    const [img, setimg] = useState(\"\") // estado para la imagen del post\r\n\r\n    const notifySucces = () => toast(\"Post actualizado exitosamente\"); // notificacion de exito\r\n    const notifyErrorTitle = () => toast.error(\"El titulo debe tener entre 8 y 32 caracteres\"); // notificacion de error en el titulo\r\n    const notifyErrorEmpty = () => toast.error(\"Todos los campos son oblogatorios y no pueden quedar vacios\"); // notificacion de error en los campos\r\n\r\n    const notifyFound = () => toast(\"Post encontrado\"); // notificacion de exito\r\n    const notifyError = () => toast.error(\"El post no existe o no es de su propiedad\"); // notificacion de error en el titulo\r\n\r\n\r\n    useEffect(() => { // funcion para obtener los posts\r\n        getPosts();\r\n    }, []);\r\n\r\n    const SetData = (val) =>{ // funcion para setear el titulo\r\n        setTitle(val.target.value)\r\n    }\r\n\r\n    const SetData2 = (val) =>{ // funcion para setear la descripcion\r\n        setdescrip(val.target.value)\r\n    }\r\n\r\n    const SetData3 = (val) =>{ // funcion para setear la imagen\r\n        setimg(val.target.value)\r\n    }\r\n\r\n    const search = () => { // funcion para buscar un post\r\n        const cscs = posts.find(element => element.title == postName)\r\n        console.log(cscs)\r\n        if (posts.find(element => element.title == postName)){ // si el post existe se setea el post encontrado\r\n            console.log(\"entro\")\r\n            notifyFound();\r\n            const cscs = posts.find(element => element.title == postName)\r\n            setPostFound(cscs);\r\n        }\r\n        else{\r\n            console.log(\"no entro\") // si el post no existe se notifica de error\r\n            notifyError();\r\n        }\r\n    }\r\n\r\n    const reloadPage = () => { // funcion para recargar la pagina\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,5000);\r\n    }\r\n\r\n\r\n    const update_post = async () =>{ // funcion para actualizar el post\r\n        if (title === \"\" || descrip ===\"\" || img===\"\") { // si algun campo esta vacio se notifica de error\r\n            notifyErrorEmpty();\r\n        }\r\n        else if (title.length < 9 || title.length > 33 || descrip.length < 9) { // si algun campo tiene una longitud invalida se notifica de error\r\n                notifyErrorTitle();\r\n        }else{ // si todos los campos estan correctos se actualiza el post\r\n            notifySucces();\r\n            Services.Update(token,\"admin\",postFound._id,title,descrip,img)\r\n            .then(res => {\r\n                console.log(res);\r\n            }\r\n            , err => {\r\n                console.log(err);\r\n            }\r\n            )\r\n            reloadPage(); \r\n        }\r\n    }\r\n\r\n    const GetValue = (get) => { // funcion para obtener el nombre del post\r\n        setpostName(get.target.value)\r\n    }\r\n    const getPosts = async () => { // funcion para obtener los posts del admin (Que seran usados para actualizar)\r\n        let response = await Services.Owned(token, \"admin\", 100, 0)\r\n        let data = response.data;\r\n        setPosts(data);\r\n    }\r\n    const reloadFaster = () => { // funcion para recargar la pagina mas rapido\r\n        setTimeout(function(){\r\n            window.location.reload();\r\n        }   ,1000);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"space-y-7 mt-6\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <div className=\"bg-gray-800 w-96 mx-auto text-white text-center p-7 rounded-lg space-y-5\">\r\n                <h1 className=\"text-xl font-bold \">Ingrese nombre de post</h1>\r\n                <input type=\"text\" placeholder=\"(Ingrese post valido)\" onChange={GetValue} className=\"p-2 rounded-lg text-black\"/>\r\n                <button onClick={search} \r\n                className=\"bg-blue-500 hover:bg-blue-700 transition m-5 p-2 \r\n                text-white font-semibold rounded-lg\">Buscar</button>\r\n            </div>\r\n            <div className=\"text-center flex flex-col space-y-3 w-96 content-center mx-auto bg-gray-800 p-10 rounded-xl\">\r\n                <h2 className=\"text-white font-bold text-xl\">\r\n                    Titulo:\r\n                </h2>\r\n                <input id=\"titulo\" type=\"text\" placeholder=\"Inserte su titulo\" onChange={SetData} className=\"rounded-xl p-2\" />\r\n                <h2 className=\"text-white font-bold text-xl\">\r\n                    Descripción:\r\n                </h2>\r\n                <input id=\"Description\" type=\"text\" placeholder=\"Inserte una descripcion\" onChange={SetData2} className=\"rounded-xl p-2\" />\r\n                <h2 className=\"text-white font-bold text-xl\">\r\n                    Imagen:\r\n                </h2>\r\n                <input id=\"Imagen\" type=\"text\" placeholder=\"(Use una URL valida)\" onChange={SetData3} className=\"rounded-xl p-2\" />\r\n                <div>\r\n                    <button onClick={update_post} className=\"bg-blue-500 hover:bg-blue-700 transition m-5 p-2 text-white font-semibold rounded-lg\">Actualizar</button>\r\n                    <button onClick={reloadFaster} className=\"bg-red-500 hover:bg-red-700 transition m-5 p-2 text-white font-semibold rounded-lg\">Volver</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useNavigate } from 'react-router-dom';\r\nimport { useState } from \"react\";\r\nimport { useUserContext } from '../../Contexts/Context';\r\nimport PostContainer from '../../Components/PostContainer';\r\nimport CreatePost from '../../Components/Admin/Create';\r\nimport ToggleP from '../../Components/Admin/Toggle';\r\nimport UpdatePostC from '../../Components/Admin/Update';\r\n//importamos\r\n\r\nexport default function Admin() { //exportamos nuestra funcion\r\n    const navigate = useNavigate()\r\n    const { Exit } = useUserContext()\r\n    const [Create, setCreate] = useState(false);\r\n    const [UpdateP, setUpdatePost] = useState(false);\r\n    const [Toggle, setToggle] = useState(false);\r\n    //Declaramos nuestros use state y context\r\n\r\n    //Declaramos un bool que nos ayudara mas tarde\r\n    const go = true\r\n    const Update = () => {//nos ayuda el Bool\"go\" para poder mostrar lo que queremos en return\r\n        setUpdatePost(go)\r\n    }\r\n    const Togglepost = () => {\r\n        setToggle(go)\r\n    }\r\n    const createPost = () => {\r\n        setCreate(go)\r\n    }\r\n\r\n    //Mas Handler para seguir navegando por la pagina\r\n    const LogoutHandler = () => {\r\n        Exit()\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n    const EnterHome = () => {\r\n        navigate(\"/admin\")\r\n    }\r\n    \r\n\r\n    const ownPosts = () => {\r\n        navigate(\"/ownposts\")\r\n    }\r\n\r\n    return (/* Nuestra pagina con su diseño tailwind */\r\n        <div>{/* Encabezado  que se repite en todas las paginas*/}\r\n            {<section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n                <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n                    <a className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n                    <nav className=\"top-0 left-0 z-0 flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n                        <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \">\r\n                            <span className=\"block\" onClick={EnterHome}>Home</span>\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>{/* estos \"a\" nos muestran lo que queremos en la parte de abajo */}\r\n                        <a onClick={ownPosts} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                            <span className=\"block\">Owned</span>\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n                        <a onClick={Update} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                            <span className=\"block\">Update</span>\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n                        <a onClick={createPost} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\" >\r\n                            <span className=\"block\">Create Post</span>\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n\r\n                        <a onClick={Togglepost} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\" >\r\n                            <span className=\"block\">Toggle</span>\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n                    </nav>\r\n                        {/* boton salir */}\r\n                    <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                        <span class=\"inline-flex rounded-md shadow-sm\">\r\n                            <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                                onClick={LogoutHandler}>\r\n                                Logout\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                    {/* Aqui se muestra segun el boton que nosotros elegimos, y se esconde cuando vuelve a falso */}\r\n    </section>}{/* Cada Ruta esta en componentes para mejor organización */}\r\n<div>{Create && <CreatePost />}</div>\r\n{ UpdateP && <UpdatePostC /> }\r\n{ Toggle && <ToggleP /> }\r\n<PostContainer />\r\n    </div >\r\n    )\r\n}\r\n\r\n","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport { UilSmileBeam } from '@iconscout/react-unicons'\r\nimport { UilStar } from '@iconscout/react-unicons'\r\nimport { UilCommentAltLines } from '@iconscout/react-unicons'\r\nimport Services from \"../Services/UserServices\";\r\nimport { useUserContext } from \"../Contexts/Context\";\r\nimport { useEffect } from \"react\"\r\nimport CommentCardContainer from \"./CommentContainer\"\r\n//importamos\r\n\r\nexport default function CardFavorites(props) {/* exportamos funcion y le pedmimos props */\r\n\r\n    const { login, token } = useUserContext();\r\n    const [username, setUsername] = useState(\"\");\r\n    const [likes, setLikes] = useState(props.likes.length);\r\n    const [commentState, setCommentState] = useState(props.comments);\r\n    const [commet, setcommet] = useState(\"\")\r\n    /* declarando variables */\r\n\r\n    const getUsernamer = async () => {/* obteniendo nuestro user con token */\r\n    const response = await Services.verifyToken(token);\r\n    const username = response.username;\r\n    setUsername(username);\r\n    console.log(username);\r\n    setCommentState(props.comments);\r\n}\r\n/* obteniendo likes */\r\n    const [liked, setLiked] = useState(props.likes.some((it) => it.username === username));\r\n\r\n    useEffect(() => {\r\n        getUsernamer();\r\n    }, []);\r\n/* Obteniendo value del input */\r\n    const SetData = (val) =>{\r\n        setcommet(val.target.value)\r\n    }\r\n\r\n\r\n/* Agregando comentario sin recargar */\r\n    const addcoment =(e) =>{\r\n        e.preventDefault();\r\n        Services.Commet(token,props.id,commet)\r\n    }\r\n/* Agregando funcion para el like y validaciones para poder agregar */\r\n    async function likePost() {\r\n        await Services.Like(token, props.id);\r\n\r\n        if (!liked) {\r\n            setLikes(likes + 1);\r\n            setLiked(true);\r\n        } else {\r\n            setLikes(likes - 1);\r\n            setLiked(false);\r\n        }\r\n    }\r\n    \r\n    /* Funcion para agregar a favoritos */\r\n    async function addToFavorites() {\r\n        const favorited = await Services.AddFavorite(token, props.id);        \r\n    }\r\n\r\n    return (\r\n        <>\r\n                <div className=\"p-4 sm:w-1/2 lg:w-1/3\">\r\n                    <div className=\"h-full border-2 border-gray-200 border-opacity-60 rounded-lg overflow-hidden\">\r\n                        <img className=\"lg:h-72 md:h-48 w-full object-cover object-center\"\r\n                            src={props.image} alt=\"Post img\"/>\r\n                        <div className=\"p-6 transition duration-300 ease-in\">\r\n                            <h2 className=\"text-sm font-medium text-gray-400 mb-1\">{new Date(props.createdAt).toLocaleDateString()}</h2>\r\n                            <h1 className=\"text-2xl font-semibold mb-3\">{props.title}</h1>\r\n                            <p className=\"leading-relaxed mb-3\">{props.description}</p>\r\n                            <div className=\"flex items-center flex-wrap \">\r\n                                <a className=\"text-indigo-300 inline-flex items-center md:mb-2 lg:mb-0\">{props.username}</a>\r\n                                <span\r\n                                    className=\"text-gray-400 mr-3 inline-flex space-x-3 items-center lg:ml-auto md:ml-0 ml-auto leading-none text-sm pr-3 py-1 border-r-2 border-gray-200\">\r\n                                    <UilCommentAltLines className=\"cursor-pointer\"/>{props.comments.length}\r\n                                    <UilSmileBeam className={`cursor-pointer ${liked && 'text-yellow-400'}`} onClick={likePost}/>{props.likes.length}\r\n                                </span>\r\n                                <button className=\"text-yellow-400 inline-flex items-center leading-none text-sm cursor-pointer\">\r\n                                    <UilStar className=\"cursor-pointer\" onClick={addToFavorites}/>\r\n                                </button>\r\n                            </div>\r\n                            <div>{/* detalles graficos */}\r\n                            <h2 className= \"text-lg font-semibold text-center text-gray-400 mt-4\">Comentarios</h2>\r\n                            {\r\n                                props.comments && commentState.map((item) => {\r\n                                    return <CommentCardContainer key={item.id} username={item.user.username} \r\n                                    description={item.description}/>\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"p-5\">\r\n                                <form className=\"w-full\" >\r\n            <input\r\n                className=\"px-4 py-2 w-full rounded-lg text-gray-800 border border-gray-500 text-sm\"\r\n                type=\"text\"/* Agarramos el comentario de nuestro input para agregarlo */\r\n                placeholder=\"Escribe tu comentario y presiona enter\" onChange={SetData}\r\n            />{/* Boton para agregar comentario */}\r\n            <button onClick={addcoment}>agregar</button>\r\n            </form>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    )}\r\n\r\n","import Services from \"../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport CardFavorites from \"./CardFavorites\";\r\nimport { useUserContext } from '../Contexts/Context';\r\n//importando\r\n\r\nconst PostContainerFavorites = () => {\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const { login, token } = useUserContext();\r\n    const [array,setarray] = useState()\r\n    //declarando variables\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n        //cambiar paginas\r\n    const nextPage = async () => {\r\n        const newPages = pages + 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => {\r\n        const newPages = pages - 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n    //obteniendo post\r\n    const getPosts = async () => {\r\n        let response = await Services.GetAll(token, 6, pages)\r\n        let data = response.data;\r\n        setPosts(data);\r\n        const fav = await Services.GetFavorite(token)\r\n        const array = []\r\n        posts.forEach((element) => {\r\n            if (element._id === fav.forEach(element => element)){\r\n                console.log(element)\r\n                array.push(element)\r\n            }\r\n        }) \r\n        console.log(array)\r\n        setarray(array)\r\n    }\r\n\r\n\r\n\r\n    return (/* Vista de paginas */\r\n        <>\r\n            <div className=\"flex flex-wrap\">\r\n                {posts.map((data) => {\r\n                    return <CardFavorites createdAt={data.createdAt} key={data._id} id={data._id} \r\n                    title={data.title} username={data.user.username} description={data.description} \r\n                    image={data.image} likes={data.likes} comments={data.comments} />\r\n                })}\r\n            </div>\r\n            <div className=\"flex justify-center space-x-5 pb-5\">\r\n                <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n                <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostContainerFavorites;//exportando","import { useUserContext } from '../../Contexts/Context';\r\nimport { useNavigate } from \"react-router\";\r\nimport PostContainerFavorites from \"../../Components/PostContainerFavorites\";\r\n// importanto\r\n\r\nexport default function User() {//Pagina importada \"UserFav\"\r\n    const navigate = useNavigate()\r\n    const { Exit } = useUserContext()\r\n    const { login, token } = useUserContext();\r\n    //Obtenemos token y los \"ese\"\r\n\r\n    //Nuestros Handlers para navegar con nuestros botones\r\n    const EnterFavorite = () => {\r\n        navigate(\"/userfavorite\")\r\n    }\r\n\r\n    const EnterHome = () => {\r\n        navigate(\"/user\")\r\n    }\r\n\r\n    const LogoutHandler = () => {\r\n        Exit()\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>{/* El estilo de nuestra pagina */}\r\n            <section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n                <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n                    <a href=\"#_\" className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n                    <nav className=\"top-0 left-0 z-0 cursor-pointer flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n                        <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 cursor-pointer transition duration-150 ease-out \">\r\n                            <span className=\"block\" onClick={EnterHome}>Home</span>{/* Botones para ir a Favoritos y User */}\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n                        <a className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \" x-data=\"{ hover: false }\">\r\n                            <span className=\"block\" onClick={EnterFavorite}>Favorites</span>\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n\r\n                    </nav>\r\n                        {/* Boton para salir */}\r\n                    <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                        <span class=\"inline-flex rounded-md shadow-sm\">\r\n                            <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                                onClick={LogoutHandler}>\r\n                                Logout\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {/* seccion exclusiva para favoritos */}\r\n            <PostContainerFavorites />\r\n        </>\r\n    );\r\n\r\n}\r\n","import { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Error() {\r\n    const navigate = useNavigate()\r\n    const Gomain =() =>{\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n    return(\r\n        <section className=\"bg-gray-50 h-screen flex flex-row\">\r\n        <div className=\"w-full bg-gray-50 h-96 text-center my-auto mx-auto\">\r\n            <img  className=\"relative h-36 w-40 mx-auto\"src=\"https://i.pinimg.com/originals/07/9c/3e/079c3ea0dce59cc171629800294b0f3d.jpg\" \r\n            alt=\"err 404\"/>\r\n            <h1 className=\"text-2xl font-extrabold\">Error 404</h1>\r\n            <p>Something went wrong, try: </p>\r\n            <button onClick={Gomain} className=\"bg-gray-400 hover:bg-gray-700 transition p-2 rounded-lg mt-4 text-white font-bold\">Go to login</button>\r\n        </div>\r\n        </section>\r\n    )\r\n}","import Services from \"../Services/UserServices\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport Card from \"./Card\";\r\nimport { useUserContext } from '../Contexts/Context';\r\n//importamos\r\n\r\nconst OwnedContainer = () => {\r\n    const [pages, setPages] = useState(0);\r\n    const [posts, setPosts] = useState([]);\r\n    const { login, token } = useUserContext();//obtener token\r\n\r\n    useEffect(() => {\r\n        getPosts();\r\n    }, []);\r\n //cambiar pagina\r\n    const nextPage = async () => {\r\n        const newPages = pages + 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    const previusPage = async () => {\r\n        const newPages = pages - 1;\r\n        setPages(newPages);\r\n        await getPosts();\r\n    }\r\n\r\n    //Aca basicamente solo el admin puede acceder a esta pagina asi que \r\n    //por ese motiivo se hace la funcion asi\r\n    const getPosts = async () => {\r\n        let response = await Services.Owned(token, \"admin\", 6, pages)\r\n        let data =  response.data;\r\n        setPosts(data);\r\n    }\r\n\r\n    return (//lo que se muestra\r\n        <>\r\n            <div className=\"flex flex-wrap\">\r\n        {posts.map((data)=>{\r\n            return <Card createdAt={data.createdAt} key={data._id} id={data._id} title={data.title} \r\n            username={data.user.username} description={data.description} image={data.image} likes={data.likes} \r\n            comments={data.comments} />\r\n            })}\r\n        </div>\r\n        <div className=\"flex justify-center space-x-5 pb-5\">\r\n            <button className=\"bg-blue-300 p-3 rounded\" onClick={previusPage}>Anterior</button>\r\n            <button className=\"bg-red-300 p-3 rounded\" onClick={nextPage}>Siguiente</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OwnedContainer;//exportamos","import { useNavigate } from 'react-router-dom';\r\nimport OwnedContainer from '../../Components/OwnedContainer';\r\nimport { useUserContext } from '../../Contexts/Context';\r\n//importamos nuestros use\r\n\r\nexport default function Owned() {//Nuestra funcion definiendo los Use\r\n    const navigate = useNavigate()\r\n    const { Exit } = useUserContext()\r\n    const { login, token } = useUserContext(); //Tomamos token\r\n\r\n\r\n    //handler para poder navegar\r\n    const EnterHandler = () => {\r\n        navigate(\"/admin\")\r\n    }\r\n\r\n    const LogoutHandler = () => {\r\n        Exit()\r\n        navigate(\"/Login\")\r\n    }\r\n\r\n    return (/* Nuestro estilo de pagina */\r\n        <div>\r\n            {<section className=\"relative w-full px-8 text-white bg-gray-800 body-font\">\r\n                <div className=\"container flex flex-col flex-wrap items-center justify-between py-5 mx-auto md:flex-row max-w-7xl\">\r\n                    <a href=\"#_\" className=\"relative z-10 flex items-center w-auto text-2xl font-extrabold leading-none select-none\">UCA pages</a>\r\n                    <nav className=\"top-0 left-0 z-0 flex items-center justify-center w-full h-full py-5 -ml-0 space-x-5 text-base md:-ml-5 md:py-0 md:absolute\">\r\n                        <a onClick={EnterHandler} className=\"relative font-medium leading-6 p-5 rounded-lg hover:bg-gray-400 transition duration-150 ease-out \">\r\n                            <span className=\"block\">Home</span>{/* boton home, el unico ya que solo muestra nuestros posts */}\r\n                            <span className=\"absolute bottom-0 left-0 inline-block w-full h-0.5 -mb-1 overflow-hidden\">\r\n                                <span x-show=\"hover\" className=\"absolute inset-0 inline-block w-full h-1 h-full transform \"></span>\r\n                            </span>\r\n                        </a>\r\n                    </nav> {/* boton salir */}\r\n                    <div class=\"relative z-10 inline-flex items-center space-x-3 md:ml-5 lg:justify-end\">\r\n                        <span class=\"inline-flex rounded-md shadow-sm\">\r\n                            <a href=\"#\" class=\"inline-flex items-center justify-center px-4 py-2 text-base font-medium leading-6 text-white whitespace-no-wrap bg-blue-600 border border-blue-700 rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\r\n                                onClick={LogoutHandler}>\r\n                                Cerrar Sesión\r\n                            </a>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </section>}\r\n            {/* Renderizamos nuestros post, esto esta en componentes */}\r\n        <OwnedContainer/>\r\n        </div>\r\n    )\r\n}","import Login from './Pages/Login/Login';\r\nimport Private from './Components/PrivateRoute/PrivateRoute'\r\nimport Home from './Pages/Home/Home';\r\nimport User from './Pages/UserMainPage/UserMainPage';\r\nimport Admin from './Pages/AdminMainPage/AdminMainPage';\r\nimport UserFavorite from './Pages/UserFavorites/UserFavoritePage';\r\nimport Error from './Pages/Error404/Error';\r\nimport Owned from './Pages/Owned/Owned';\r\n//Obteniendo nuestros imports de pages, componentes\r\n\r\nimport { HashRouter, Routes, Route, Navigate } from \"react-router-dom\"; /* importando react router para navegar */\r\n\r\nfunction App() {/* App */\r\n  return (\r\n\r\n    <HashRouter>{/* cambiamos el browser ya que HashRouter tiene la misma funcionalidad */}\r\n      <Routes>{/* Para solo mostrar una ruta */}\r\n        <Route path=\"/\" element={<Home />} />{/* La ruta de Home cuando se ingresa */}\r\n        <Route path=\"/Login\" element={<Login />} />{/* Login que lleva a admin y user */}\r\n        <Route path=\"/*\" element={<Error />} />{/* Error para cualquier ruta que no sea una establecida */}\r\n\r\n      {/* Rutas privadas para evitar hackeos */}\r\n        <Route path=\"/admin\" element={<Private role=\"admin\"> <Admin/></Private>}/>{/* admin main */}\r\n        <Route path=\"/ownposts\" element={<Private role=\"admin\"> <Owned/></Private>}/>{/* OwnPost de admin */}\r\n        <Route path=\"/user\" element={<Private role=\"user\"> <User/></Private>}/>{/* User Home */}\r\n        <Route path=\"/userfavorite\" element={<Private role=\"user\"> <UserFavorite/></Private>}/>{/* Favoritos de User */}\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n/* hicimos own y favoritos en una ruta en especial ya que es mucho contenido para una sola pagina */\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from './Contexts/Context';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}